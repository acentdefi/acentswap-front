{"version":3,"sources":["views/Referrals/components/CopyClipload.tsx","views/Referrals/components/MyReferralLinkCard.tsx","views/Referrals/components/TotalCommissionCard.tsx","views/Referrals/components/TotalReferralCard.tsx","views/Referrals/components/UnlockWalletCard.tsx","views/Referrals/index.tsx"],"names":["StyleButton","styled","Text","attrs","role","theme","colors","primary","Tooltip","div","isTooltipDisplayed","contrast","invertedContrast","CopyToClipboard","toCopy","children","props","useState","setIsTooltipDisplayed","displayTooltip","setTimeout","small","bold","onClick","navigator","clipboard","permissions","writeText","then","document","queryCommandSupported","content","el","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboardWithCommand","width","color","ml","StyledLotteryCard","Card","MyReferralLinkCard","t","useTranslation","referralLink","useWeb3React","account","size","mb","TotalCommissionCard","referralsInfo","useGetReferralInfo","totalReferralCommissions","TotalReferralCard","referralsCount","StyledCardBody","CardBody","StyledHeading","Heading","UnlockWalletCard","isActive","UnlockButton","Cards","BaseLayout","mediaQueries","sm","lg","Referrals","dispatch","useAppDispatch","useEffect","fetchReferralInfoAsync","PageHeader","justifyContent","flexDirection","mr","as","Page"],"mappings":"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","file":"static/js/19.ee4a7917.chunk.js","sourcesContent":["import { CopyIcon, Text } from 'acentswap-uikit3'\r\nimport React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\n\r\ninterface Props {\r\n  toCopy: string\r\n}\r\n\r\nconst StyleButton = styled(Text).attrs({ role: 'button' })`\r\n  position: relative;\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n`\r\n\r\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\r\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'block' : 'none')};\r\n  position: absolute;\r\n  bottom: -22px;\r\n  right: 0;\r\n  left: 0;\r\n  text-align: center;\r\n  background-color: ${({ theme }) => theme.colors.contrast};\r\n  color: ${({ theme }) => theme.colors.invertedContrast};\r\n  border-radius: 16px;\r\n  opacity: 0.7;\r\n`\r\n\r\nconst CopyToClipboard: React.FC<Props> = ({ toCopy, children, ...props }) => {\r\n  const [isTooltipDisplayed, setIsTooltipDisplayed] = useState(false)\r\n\r\n  const copyToClipboardWithCommand = (content: string) => {\r\n    const el = document.createElement('textarea')\r\n    el.value = content\r\n    document.body.appendChild(el)\r\n    el.select()\r\n    document.execCommand('copy')\r\n    document.body.removeChild(el)\r\n  }\r\n\r\n  function displayTooltip() {\r\n    setIsTooltipDisplayed(true)\r\n    setTimeout(() => {\r\n      setIsTooltipDisplayed(false)\r\n    }, 1000)\r\n  }\r\n\r\n  return (\r\n    <StyleButton\r\n      small\r\n      bold\r\n      onClick={() => {\r\n        if (navigator.clipboard && navigator.permissions) {\r\n          navigator.clipboard.writeText(toCopy).then(() => displayTooltip())\r\n        } else if (document.queryCommandSupported('copy')) {\r\n          copyToClipboardWithCommand(toCopy)\r\n          displayTooltip()\r\n        }\r\n      }}\r\n      {...props}\r\n    >\r\n      {children}\r\n      <CopyIcon width=\"20px\" color=\"primary\" ml=\"4px\" />\r\n      <Tooltip isTooltipDisplayed={isTooltipDisplayed}>Copied</Tooltip>\r\n    </StyleButton>\r\n  )\r\n}\r\n\r\nexport default CopyToClipboard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Flex } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport CopyToClipboard from './CopyClipload'\r\n\r\nconst StyledLotteryCard = styled(Card)``\r\n\r\nconst MyReferralLinkCard = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n\r\n  const domain = 'https://acentswap.com/?ref='\r\n  const referralLink = domain + account\r\n  return (\r\n    <StyledLotteryCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {t('My Referral Link')}\r\n        </Heading>\r\n        <Flex mb=\"32px\">\r\n          <CopyToClipboard toCopy={referralLink}>{referralLink}</CopyToClipboard>\r\n        </Flex>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default MyReferralLinkCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Text } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetReferralInfo } from 'state/hooks'\r\n\r\nconst StyledLotteryCard = styled(Card)``\r\n\r\nconst TotalCommissionCard = () => {\r\n  const { t } = useTranslation()\r\n  const referralsInfo = useGetReferralInfo()\r\n  return (\r\n    <StyledLotteryCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {t('Total Referral Commissions')}\r\n        </Heading>\r\n        <Text bold>{referralsInfo.totalReferralCommissions} ACENT</Text>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default TotalCommissionCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody, Text } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useGetReferralInfo } from 'state/hooks'\r\n\r\nconst StyledLotteryCard = styled(Card)``\r\n\r\nconst TotalReferralCard = () => {\r\n  const { t } = useTranslation()\r\n  const referralsInfo = useGetReferralInfo()\r\n  return (\r\n    <StyledLotteryCard>\r\n      <CardBody>\r\n        <Heading size=\"xl\" mb=\"24px\">\r\n          {t('Total Referrals')}\r\n        </Heading>\r\n        <Text bold>{referralsInfo.referralsCount}</Text>\r\n      </CardBody>\r\n    </StyledLotteryCard>\r\n  )\r\n}\r\n\r\nexport default TotalReferralCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  max-height: 196px;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        {/* <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper> */}\r\n        <div>\r\n          <StyledHeading size=\"md\">{t('Unlock wallet to get your unique referral link')}</StyledHeading>\r\n          <UnlockButton />\r\n        </div>\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import { BaseLayout, Flex, Heading } from 'acentswap-uikit3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport Page from 'components/layout/Page'\r\nimport PageHeader from 'components/PageHeader'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport React, { useEffect } from 'react'\r\nimport { useAppDispatch } from 'state'\r\nimport { fetchReferralInfoAsync } from 'state/referrals'\r\nimport styled from 'styled-components'\r\nimport MyReferralLinkCard from './components/MyReferralLinkCard'\r\nimport TotalCommissionCard from './components/TotalCommissionCard'\r\nimport TotalReferralCard from './components/TotalReferralCard'\r\nimport UnlockWalletCard from './components/UnlockWalletCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: stretch;\r\n  justify-content: stretch;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n    width: 100%;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 8;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst Referrals: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const dispatch = useAppDispatch()\r\n\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchReferralInfoAsync(account))\r\n    }\r\n  }, [dispatch, account])\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Flex justifyContent=\"space-between\" flexDirection={['column', null, 'row']}>\r\n          <Flex flexDirection=\"column\" mr={['8px', 0]}>\r\n            <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n              {t('Referels')}\r\n            </Heading>\r\n            <Heading size=\"md\" color=\"text\">\r\n              {t('Share the referral link below to invite your friends and earn 1% of your friends earnings FOREVER!')}\r\n            </Heading>\r\n          </Flex>\r\n        </Flex>\r\n      </PageHeader>\r\n      <Page>\r\n        {!account ? (\r\n          <UnlockWalletCard />\r\n        ) : (\r\n          <div>\r\n            <Cards>\r\n              <TotalReferralCard />\r\n              <TotalCommissionCard />\r\n            </Cards>\r\n            <MyReferralLinkCard />\r\n          </div>\r\n        )}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Referrals\r\n"],"sourceRoot":""}