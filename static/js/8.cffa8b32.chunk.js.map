{"version":3,"sources":["contexts/PastLotteryDataContext.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/ClaimPrizesCard.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","hooks/useLastUpdated.ts","hooks/usePreviousValue.ts","hooks/useTickets.ts","utils/lotteryUtils.ts","hooks/useBuyLottery.ts","components/Select/Select.tsx"],"names":["React","createContext","mostRecentLotteryNumber","historyError","historyData","Title","styled","Heading","attrs","as","size","ComeBack","Text","StyledHero","div","theme","mediaQueries","sm","StyledContainer","Container","LeftWrapper","lg","Hero","t","useTranslation","StyledLoading","Loading","RewardP","TicketsList","props","colors","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","from","winNumbers","useWinningNumbers","rewardMatch","useCallback","number","n","i","length","listItems","map","index","emoji","Array","join","toString","title","TICKETS","variant","onClick","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","onSuccess","useState","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","tickets","useTickets","useModal","onPresentMyTickets","handleClaim","a","console","error","winnings","getBalanceNumber","toFixed","color","style","marginRight","width","disabled","Wrapper","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","ClaimPrizesCard","account","useWeb3React","setLastUpdated","handleSuccess","mb","getLotteryRoundData","lotteryNumber","fetch","response","json","data","Error","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","useContext","PastLotteryDataContext","useEffect","roundData","fetchRecentLotteryData","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","value","type","inputMode","min","isWarning","max","onChange","currentTarget","parseInt","scale","PastRoundCardError","p","message","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","fontSize","defaultProps","ExternalLinkWrap","LinkExternal","TicketCard","contractLink","ticketsLength","href","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","amount","BigNumber","multipliedBy","toNumber","toLocaleString","eq","CardBusdValue","bold","formatLotteryDate","lotteryDate","date","Date","dateString","toDateString","hours","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","CardHeading","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","Bar","InnerWrapper","HistoryChart","showLast","isDark","useTheme","getDataArray","kind","rawData","dataPoint","reverse","slice","Number","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","useMemo","tooltips","mode","intersect","legend","scales","yAxes","position","id","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","LabelWrapper","PastDrawsHistoryCard","setShowLast","textTransform","Select","option","Cards","BaseLayout","SecondCardColumnWrapper","PastDrawsPage","Lottery","lotteryContract","useLottery","setHistoryData","setHistoryError","currentLotteryNumber","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","Provider","CardValue","decimals","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","useLastUpdated","now","lastUpdated","setStateLastUpdated","previousLastUpdated","usePreviousValue","ref","useTotalRewards","BIG_ZERO","rewards","setRewards","fastRefresh","useRefresh","getTotalRewards","res","fetchBalance","setClaimAmount","setClaimLoading","ticketsContract","useLotteryTicket","getTotalClaim","claim","winningNumbers","setWinningNumbers","getWinningNumbers","setTickets","getTickets","multiCall","abi","calls","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","newCalls","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","decodeFunctionResult","multiBuy","price","numbersList","times","DEFAULT_TOKEN_DECIMAL","send","on","tx","transactionHash","customLotteryNum","issueIndex","getTicketsAmount","calls1","apply","address","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","finalTokenIds","r","drawed","calls4","reduce","c","sum","getMax","maxNumber","getMatchingRewardLength","matchNumber","historyAmount","LOTTERY_TICKET_PRICE","numbers","historyNumbers","lotteryTicketContract","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","setMax","fetchMax","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","height","containerSize","setContainerSize","toggling","onOptionClicked","offsetWidth","offsetHeight"],"mappings":"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","file":"static/js/8.cffa8b32.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport interface PastLotteryDataState {\r\n  mostRecentLotteryNumber: number\r\n  currentLotteryNumber: number\r\n  historyError: boolean\r\n  historyData: Array<any>\r\n}\r\n\r\nexport default React.createContext({\r\n  mostRecentLotteryNumber: 0,\r\n  historyError: false,\r\n  historyData: [],\r\n} as PastLotteryDataState)\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Text } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport Container from 'components/layout/Container'\r\n\r\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\r\n  color: #ffffff;\r\n  margin-bottom: 24px;\r\n  text-shadow: 2px 2px 2px #00000040;\r\n`\r\n\r\nconst ComeBack = styled(Text)`\r\n  background: -webkit-linear-gradient(#ffd800, #eb8c00);\r\n  font-size: 24px;\r\n  font-weight: 600;\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n`\r\n\r\nconst StyledHero = styled.div`\r\n  background-image: linear-gradient(#0e7139, #124026);\r\n  max-height: max-content;\r\n  overflow: hidden;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    max-height: 256px;\r\n  }\r\n`\r\n\r\nconst StyledContainer = styled(Container)`\r\n  display: flex;\r\n\r\n  flex-direction: column-reverse;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LeftWrapper = styled.div`\r\n  flex: 1;\r\n  padding-right: 0;\r\n  padding-bottom: 40px;\r\n  padding-top: 40px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 24px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst Hero = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <StyledHero>\r\n      <StyledContainer>\r\n        <LeftWrapper>\r\n          <Title>{t('Lottery')}</Title>\r\n          <ComeBack>{t('Buy tickets with ACENT Win if 2, 3 or 4 of your ticket numbers match!')}</ComeBack>\r\n          {/* <LinkExternal\r\n            bold\r\n            mt={20}\r\n            external\r\n            href=\"https://voting.acentswap.com/#/pancake/proposal/QmU8pcbmBrfbfVQXMMxmkExDq3mYq4s5cbBuFe6uCZzdmX\"\r\n          >\r\n            {t('Learn more')}\r\n          </LinkExternal> */}\r\n        </LeftWrapper>\r\n        {/* <RightWrapper>\r\n          <img src=\"/images/tombola.png\" alt=\"lottery bunny\" />\r\n        </RightWrapper> */}\r\n      </StyledContainer>\r\n    </StyledHero>\r\n  )\r\n}\r\n\r\nexport default Hero\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Loading: React.FC = () => <StyledLoading />\r\n\r\nconst StyledLoading = styled.div`\r\n  border: 8px solid #f3f3f3;\r\n  border-radius: 50%;\r\n  border-top: 8px solid #ddd;\r\n  border-bottom: 8px solid #ddd;\r\n  width: 20px;\r\n  height: 20px;\r\n  -webkit-animation: spin 2s linear infinite;\r\n  animation: spin 2s linear infinite;\r\n  @-webkit-keyframes spin {\r\n    0% {\r\n      -webkit-transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      -webkit-transform: rotate(360deg);\r\n    }\r\n  }\r\n\r\n  @keyframes spin {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`\r\n\r\nexport default Loading\r\n","import React, { useCallback } from 'react'\r\nimport { Button, Modal } from 'acentswap-uikit3'\r\nimport styled from 'styled-components'\r\nimport { useWinningNumbers } from 'hooks/useTickets'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface UserTicketsModalProps {\r\n  myTicketNumbers: Array<any>\r\n  from?: string\r\n  onDismiss?: () => void\r\n}\r\n\r\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\r\n  const winNumbers = useWinningNumbers()\r\n  const { t } = useTranslation()\r\n  const rewardMatch = useCallback(\r\n    (number) => {\r\n      let n = 0\r\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\r\n        // eslint-disable-next-line eqeqeq\r\n        if (winNumbers[i] == number[i]) n++\r\n      }\r\n      return n\r\n    },\r\n    [winNumbers],\r\n  )\r\n\r\n  const listItems = myTicketNumbers.map((number, index) => {\r\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\r\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\r\n      return (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RewardP key={index}>\r\n          {emoji}\r\n          {number.toString()}\r\n          {emoji}\r\n        </RewardP>\r\n      )\r\n    }\r\n    // eslint-disable-next-line react/no-array-index-key\r\n    return <p key={index}>{number.toString()}</p>\r\n  })\r\n\r\n  return (\r\n    <Modal title={t('My Tickets (Total: %TICKETS%)', { TICKETS: myTicketNumbers.length })} onDismiss={onDismiss}>\r\n      <TicketsList>\r\n        <h2>{listItems}</h2>\r\n      </TicketsList>\r\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\r\n        {t('Close')}\r\n      </StyledButton>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nconst RewardP = styled.div`\r\n  color: #ff8c28;\r\n`\r\n\r\nconst TicketsList = styled.div`\r\n  text-align: center;\r\n  overflow-y: auto;\r\n  max-height: 400px;\r\n  color: ${(props) => props.theme.colors.primary};\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[2]}px;\r\n`\r\n\r\nexport default UserTicketsModal\r\n","import React, { useCallback, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, Heading, Won, useModal } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\r\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\r\nimport Loading from '../Loading'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst WinningsWrapper = styled.div`\r\n  display: flex;\r\n  align-items: baseline;\r\n`\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-bottom: 16px;\r\n\r\n  svg {\r\n    width: 80px;\r\n    height: 80px;\r\n  }\r\n`\r\n\r\nconst StyledCardActions = styled.div`\r\n  margin-top: ${(props) => props.theme.spacing[3]}px;\r\n`\r\n\r\nconst StyledCardContentInner = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst StyledButton = styled(Button)`\r\n  margin-top: ${(props) => props.theme.spacing[1]}px;\r\n`\r\n\r\ninterface PrizesWonContentProps {\r\n  onSuccess: () => void\r\n}\r\n\r\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\r\n  const [requestedClaim, setRequestedClaim] = useState(false)\r\n  const { t } = useTranslation()\r\n  const { claimLoading, claimAmount } = useTotalClaim()\r\n  const { onMultiClaim } = useMultiClaimLottery()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      setRequestedClaim(true)\r\n      const txHash = await onMultiClaim()\r\n      // user rejected tx or didn't go thru\r\n      if (txHash) {\r\n        onSuccess()\r\n        setRequestedClaim(false)\r\n      }\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\r\n\r\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\r\n\r\n  return (\r\n    <StyledCardContentInner>\r\n      <IconWrapper>\r\n        <Won />\r\n      </IconWrapper>\r\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\r\n        {t('You won!')}\r\n      </Heading>\r\n      {claimLoading && <Loading />}\r\n      {!claimLoading && (\r\n        <>\r\n          <WinningsWrapper>\r\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\r\n              {winnings}\r\n            </Heading>\r\n            <Heading as=\"h4\" size=\"lg\">\r\n              ACENT\r\n            </Heading>\r\n          </WinningsWrapper>\r\n        </>\r\n      )}\r\n      <StyledCardActions>\r\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\r\n          {t('Collect')}\r\n        </Button>\r\n      </StyledCardActions>\r\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n        {t('View your tickets')}\r\n      </StyledButton>\r\n    </StyledCardContentInner>\r\n  )\r\n}\r\n\r\nexport default PrizesWonContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, useModal } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTickets from 'hooks/useTickets'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\nconst TextWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledText = styled(Text)`\r\n  padding-left: 12px;\r\n`\r\n\r\nconst Image = styled.img`\r\n  margin-right: 6px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.md} {\r\n    margin-right: 20px;\r\n  }\r\n`\r\nconst StyledButton = styled(Button)`\r\n  padding: 0 12px;\r\n  height: unset;\r\n`\r\n\r\nconst NoPrizesContent: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const tickets = useTickets()\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\r\n      <TextWrapper>\r\n        <StyledText color=\"textDisabled\">{t('Sorry, no prizes to collect')}</StyledText>\r\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\r\n          {t('View your tickets')}\r\n        </StyledButton>\r\n      </TextWrapper>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default NoPrizesContent\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'acentswap-uikit3'\r\nimport PrizesWonContent from './PrizesWonContent'\r\nimport NoPrizesContent from './NoPrizesContent'\r\n\r\nconst StyledCard = styled(Card)`\r\n  ${(props) =>\r\n    props.isDisabled\r\n      ? `  \r\n        margin-top: 16px;\r\n        background-color: unset;\r\n        box-shadow: unset;\r\n        border: 1px solid ${props.theme.colors.textDisabled};\r\n\r\n        ${props.theme.mediaQueries.sm} {\r\n          margin-top: 24px;\r\n        }\r\n\r\n        ${props.theme.mediaQueries.lg} {\r\n          margin-top: 32px;\r\n        }\r\n        `\r\n      : ``}\r\n`\r\n\r\ninterface YourPrizesCardProps {\r\n  isAWin: boolean\r\n  onSuccess: () => void\r\n}\r\n\r\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({ isAWin, onSuccess }) => {\r\n  return (\r\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\r\n      <CardBody>{isAWin ? <PrizesWonContent onSuccess={onSuccess} /> : <NoPrizesContent />}</CardBody>\r\n    </StyledCard>\r\n  )\r\n}\r\n\r\nexport default YourPrizesCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, Card, CardBody } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport UnlockButton from 'components/UnlockButton'\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  max-height: 196px;\r\n`\r\n\r\nconst StyledHeading = styled(Heading)`\r\n  margin: 16px 0;\r\n`\r\n\r\nconst UnlockWalletCard = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Card isActive>\r\n      <StyledCardBody>\r\n        {/* <IconWrapper>\r\n          <Ticket />\r\n        </IconWrapper> */}\r\n        <div>\r\n          <StyledHeading size=\"md\">{t('Unlock wallet to access lottery')}</StyledHeading>\r\n          <UnlockButton />\r\n        </div>\r\n      </StyledCardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default UnlockWalletCard\r\n","import React, { useCallback } from 'react'\r\nimport { Box } from 'acentswap-uikit3'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useTotalClaim } from 'hooks/useTickets'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport YourPrizesCard from './YourPrizesCard'\r\nimport UnlockWalletCard from './UnlockWalletCard'\r\n\r\nconst ClaimPrizesCard = () => {\r\n  const { account } = useWeb3React()\r\n  const { claimAmount, setLastUpdated } = useTotalClaim()\r\n  const winnings = getBalanceNumber(claimAmount)\r\n  const isAWin = winnings > 0\r\n\r\n  const handleSuccess = useCallback(() => {\r\n    setLastUpdated()\r\n  }, [setLastUpdated])\r\n\r\n  return (\r\n    <Box mb=\"32px\">\r\n      {!account ? <UnlockWalletCard /> : <YourPrizesCard isAWin={isAWin} onSuccess={handleSuccess} />}\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default ClaimPrizesCard\r\n","export type DataResponse = {\r\n  lotteryNumber: number\r\n  lotteryDate: string\r\n  lotteryNumbers: number[]\r\n  poolSize: number\r\n  burned: number\r\n  contractLink: string\r\n  jackpotTicket: number\r\n  match2Ticket: number\r\n  match3Ticket: number\r\n  match4Ticket: number\r\n  poolJackpot: number\r\n  poolMatch3: number\r\n  poolMatch2: number\r\n  poolMatch1: number | null\r\n\r\n  // TODO: Fill in the error type\r\n  error: any\r\n}\r\n\r\n/**\r\n * Get data for a specific lottery\r\n */\r\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\r\n  try {\r\n    const response = await fetch(`https://api.acentswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\r\n    const data = await response.json()\r\n\r\n    return data\r\n  } catch (error) {\r\n    throw new Error(error)\r\n  }\r\n}\r\n\r\nexport default getLotteryRoundData\r\n","import { useContext, useEffect, useState } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\r\n\r\ntype GetRecentLotteryRoundDataReturn = {\r\n  isLoading: boolean\r\n  data: DataResponse\r\n  mostRecentLotteryNumber: number\r\n  error: any\r\n}\r\n\r\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [data, setData] = useState(null)\r\n  const [error, setError] = useState(null)\r\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\r\n\r\n  useEffect(() => {\r\n    const fetchRecentLotteryData = async () => {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\r\n        setData(roundData)\r\n      } catch (err) {\r\n        setError(err)\r\n      } finally {\r\n        setIsLoading(false)\r\n      }\r\n    }\r\n\r\n    if (mostRecentLotteryNumber > 0) {\r\n      fetchRecentLotteryData()\r\n    }\r\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\r\n\r\n  return { isLoading, data, mostRecentLotteryNumber, error }\r\n}\r\n\r\nexport default useGetRecentLotteryRoundData\r\n","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Input, Button } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface PastLotterySearcherProps {\r\n  initialLotteryNumber: number\r\n  onSubmit: (num: number) => void\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-bottom: 24px;\r\n`\r\n\r\nconst SearchWrapper = styled.div`\r\n  position: relative;\r\n`\r\nconst InputWrapper = styled.div`\r\n  input::-webkit-inner-spin-button {\r\n    -webkit-appearance: none;\r\n    margin: 0;\r\n  }\r\n\r\n  /* Firefox */\r\n  input[type='number'] {\r\n    -moz-appearance: textfield;\r\n  }\r\n`\r\n\r\nconst ButtonWrapper = styled.div`\r\n  position: absolute;\r\n  right: 8px;\r\n  top: 50%;\r\n  transform: translate(0%, -50%);\r\n  width: auto;\r\n`\r\n\r\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\r\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\r\n  const [isError, setIsError] = useState(false)\r\n  const { t } = useTranslation()\r\n\r\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\r\n    evt.preventDefault()\r\n    onSubmit(lotteryNumber)\r\n  }\r\n\r\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (evt.currentTarget.value) {\r\n      const value = parseInt(evt.currentTarget.value, 10)\r\n\r\n      // The max value will always be the initialLotteryNumber which equals\r\n      // the latest lottery round\r\n      setIsError(value > initialLotteryNumber)\r\n      setLotteryNumber(value)\r\n    } else {\r\n      setLotteryNumber(initialLotteryNumber)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text>{t('Select lottery number:')}</Text>\r\n      <form onSubmit={handleSubmit}>\r\n        <SearchWrapper>\r\n          <InputWrapper>\r\n            <Input\r\n              value={lotteryNumber}\r\n              type=\"number\"\r\n              inputMode=\"numeric\"\r\n              min=\"0\"\r\n              isWarning={isError}\r\n              max={initialLotteryNumber}\r\n              onChange={handleChange}\r\n            />\r\n          </InputWrapper>\r\n          <ButtonWrapper>\r\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\r\n              {t('Search')}\r\n            </Button>\r\n          </ButtonWrapper>\r\n        </SearchWrapper>\r\n      </form>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotterySearcher\r\n","import React from 'react'\r\nimport { Text } from 'acentswap-uikit3'\r\n\r\ninterface PastRoundCardErrorProps {\r\n  error: {\r\n    message: string\r\n  }\r\n}\r\n\r\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\r\n  return <Text p=\"24px\">{error.message}</Text>\r\n}\r\n\r\nexport default PastRoundCardError\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Flex, Heading, Text } from 'acentswap-uikit3'\r\n\r\ninterface HeadingProps {\r\n  valueToDisplay?: string\r\n  children?: string\r\n  Icon?: React.ComponentType\r\n}\r\n\r\nconst IconWrapper = styled.div`\r\n  margin-right: 16px;\r\n  svg {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n`\r\n\r\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\r\n  return (\r\n    <Flex {...props}>\r\n      {Icon && (\r\n        <IconWrapper>\r\n          <Icon />\r\n        </IconWrapper>\r\n      )}\r\n      <Flex flexDirection=\"column\">\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {children}\r\n        </Text>\r\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\r\n      </Flex>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nLotteryCardHeading.defaultProps = {\r\n  valueToDisplay: '',\r\n  Icon: () => <div />,\r\n  children: '',\r\n}\r\n\r\nexport default LotteryCardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, LinkExternal, useModal } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport useTickets from 'hooks/useTickets'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\r\n\r\nconst Wrapper = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding-top: 24px;\r\n\r\n  & > div {\r\n    flex: 1;\r\n    width: 100%;\r\n  }\r\n`\r\n\r\nconst ExternalLinkWrap = styled(LinkExternal)`\r\n  align-items: center;\r\n  display: flex;\r\n  height: 48px;\r\n  justify-content: center;\r\n  text-decoration: none;\r\n  width: 100%;\r\n`\r\n\r\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\r\n  const { t } = useTranslation()\r\n  const tickets = useTickets(lotteryNumber)\r\n  const ticketsLength = tickets.length\r\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\r\n  const { account } = useWeb3React()\r\n\r\n  if (!account) {\r\n    return (\r\n      <Wrapper>\r\n        <UnlockButton />\r\n      </Wrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\r\n        {t('View your tickets')}\r\n      </Button>\r\n      <ExternalLinkWrap href={contractLink}>{t('View on BscScan')}</ExternalLinkWrap>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default TicketCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Heading, Text } from 'acentswap-uikit3'\r\nimport { BigNumber } from 'bignumber.js'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport CardBusdValue from '../../Home/components/CardBusdValue'\r\n\r\nexport interface PrizeGridProps {\r\n  lotteryPrizeAmount?: number\r\n  pastDraw?: boolean\r\n  jackpotMatches?: number\r\n  twoTicketMatches?: number\r\n  threeTicketMatches?: number\r\n}\r\n\r\nconst Grid = styled.div<{ pastDraw?: boolean }>`\r\n  display: grid;\r\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\r\n  grid-template-rows: repeat(4, auto);\r\n`\r\n\r\nconst RightAlignedText = styled(Text)`\r\n  text-align: right;\r\n`\r\n\r\nconst RightAlignedHeading = styled(Heading)`\r\n  text-align: right;\r\n`\r\n\r\nconst GridItem = styled.div<{ marginBottom?: string }>`\r\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\r\n`\r\n\r\nconst PastDrawGridItem = styled(GridItem)`\r\n  transform: translate(-40%, 0%);\r\n`\r\n\r\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\r\n  lotteryPrizeAmount = 0,\r\n  pastDraw = false,\r\n  jackpotMatches,\r\n  twoTicketMatches,\r\n  threeTicketMatches,\r\n}) => {\r\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\r\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\r\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\r\n  const { t } = useTranslation()\r\n  const cakeBusdPrice = usePriceCakeBusd()\r\n\r\n  const getCakeBusdValue = (amount: number) => {\r\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\r\n  }\r\n\r\n  return (\r\n    <Grid pastDraw={pastDraw}>\r\n      <GridItem>\r\n        <Text fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('No. Matched')}\r\n        </Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n            {t('Winners')}\r\n          </RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\r\n          {t('Prize Pot')}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 4 matches row */}\r\n      <GridItem>\r\n        <Heading size=\"md\">4</Heading>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedHeading size=\"md\">\r\n          {fourMatchesAmount.toLocaleString()}\r\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\r\n        </RightAlignedHeading>\r\n      </GridItem>\r\n      {/* 3 matches row */}\r\n      <GridItem>\r\n        <Text bold>3</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>\r\n          {threeMatchesAmount.toLocaleString()}\r\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* 2 matches row */}\r\n      <GridItem>\r\n        <Text>2</Text>\r\n      </GridItem>\r\n      {pastDraw && (\r\n        <PastDrawGridItem>\r\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\r\n        </PastDrawGridItem>\r\n      )}\r\n      <GridItem>\r\n        <RightAlignedText>\r\n          {twoMatchesAmount.toLocaleString()}\r\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\r\n        </RightAlignedText>\r\n      </GridItem>\r\n      {/* Burn row */}\r\n      <GridItem marginBottom=\"0\">\r\n        <Text>{t(`${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\r\n      </GridItem>\r\n      {pastDraw ? (\r\n        <>\r\n          <GridItem marginBottom=\"0\" />\r\n          <GridItem marginBottom=\"0\">\r\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n          </GridItem>\r\n        </>\r\n      ) : (\r\n        <GridItem marginBottom=\"0\">\r\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\r\n        </GridItem>\r\n      )}\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default PrizeGrid\r\n","const formatLotteryDate = (lotteryDate: string) => {\r\n  if (!lotteryDate) {\r\n    return {}\r\n  }\r\n\r\n  const date = new Date(lotteryDate)\r\n\r\n  const dateString = date.toDateString()\r\n  const hours = date.getUTCHours()\r\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\r\n\r\n  return { hours, monthAndDay }\r\n}\r\n\r\nexport default formatLotteryDate\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'acentswap-uikit3'\r\nimport formatLotteryDate from '../helpers/formatLotteryDate'\r\n\r\nconst Wrapper = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n`\r\n\r\nconst Timestamp = ({ timeValue }) => {\r\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Text fontSize=\"14px\">\r\n        {monthAndDay}, {hours}:00 UTC\r\n      </Text>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Timestamp\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport LotteryCardHeading from '../LotteryCardHeading'\r\nimport PastLotteryActions from './PastLotteryActions'\r\nimport PrizeGrid from '../PrizeGrid'\r\nimport Timestamp from '../Timestamp'\r\n\r\ninterface PastRoundCardDetailsProps {\r\n  data: DataResponse\r\n}\r\n\r\nconst CardHeading = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n`\r\n\r\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\r\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\r\n`\r\n\r\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const {\r\n    contractLink,\r\n    jackpotTicket,\r\n    lotteryDate,\r\n    lotteryNumber,\r\n    lotteryNumbers,\r\n    match2Ticket,\r\n    match3Ticket,\r\n    poolSize,\r\n  } = data\r\n\r\n  return (\r\n    !data.error &&\r\n    data && (\r\n      <>\r\n        <CardBody>\r\n          <CardHeading>\r\n            <Timestamp timeValue={lotteryDate} />\r\n            <Heading size=\"md\" mb=\"24px\">\r\n              Round #{lotteryNumber}\r\n            </Heading>\r\n            <TopLotteryCardHeading\r\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\r\n              Icon={TicketRound}\r\n            >\r\n              {t('Winning numbers')}\r\n            </TopLotteryCardHeading>\r\n            <LotteryCardHeading valueToDisplay={t(`${poolSize.toLocaleString()} ACENT`)} Icon={PancakeRoundIcon}>\r\n              {t('Total prizes')}\r\n            </LotteryCardHeading>\r\n          </CardHeading>\r\n        </CardBody>\r\n        <CardFooter>\r\n          <PrizeGrid\r\n            lotteryPrizeAmount={poolSize}\r\n            jackpotMatches={jackpotTicket}\r\n            twoTicketMatches={match2Ticket}\r\n            threeTicketMatches={match3Ticket}\r\n            pastDraw\r\n          />\r\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\r\n        </CardFooter>\r\n      </>\r\n    )\r\n  )\r\n}\r\n\r\nexport default PastRoundCardDetails\r\n","import React from 'react'\r\nimport { Card } from 'acentswap-uikit3'\r\nimport { DataResponse } from 'utils/getLotteryRoundData'\r\nimport PastRoundCardError from './PastRoundCardError'\r\nimport PastRoundCardDetails from './PastRoundCardDetails'\r\n\r\ninterface PastRoundCardProps {\r\n  error: {\r\n    message: string\r\n  }\r\n  data: DataResponse\r\n}\r\n\r\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\r\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\r\n}\r\n\r\nexport default PastRoundCard\r\n","import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Card, CardBody } from 'acentswap-uikit3'\r\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\r\nimport PastLotterySearcher from './PastLotterySearcher'\r\nimport PastRoundCard from './PastRoundCard'\r\nimport Loading from '../Loading'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst StyledCardBody = styled(CardBody)`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 552px; // height of final card\r\n`\r\n\r\nconst PastLotteryRoundViewer = () => {\r\n  const [state, setState] = useState({\r\n    roundData: null,\r\n    error: { message: null, type: null },\r\n    isInitialized: false,\r\n    isLoading: true,\r\n  })\r\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\r\n  const { t } = useTranslation()\r\n  const { roundData, error, isInitialized, isLoading } = state\r\n\r\n  useEffect(() => {\r\n    if (initialLotteryData) {\r\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\r\n    }\r\n  }, [initialLotteryData, setState])\r\n\r\n  const handleSubmit = async (lotteryNumber: number) => {\r\n    setState((prevState) => ({\r\n      ...prevState,\r\n      isLoading: true,\r\n    }))\r\n\r\n    getLotteryRoundData(lotteryNumber)\r\n      .then((data) => {\r\n        if (data.error) {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: {\r\n              message: t('The lottery number you provided does not exist'),\r\n              type: 'out of range',\r\n            },\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        } else {\r\n          setState((prevState) => ({\r\n            ...prevState,\r\n            error: { message: null, type: null },\r\n            roundData: data,\r\n            isLoading: false,\r\n            isInitialized: true,\r\n          }))\r\n        }\r\n      })\r\n      .catch(() => {\r\n        setState((prevState) => ({\r\n          ...prevState,\r\n          error: { message: t('Error fetching data'), type: 'api' },\r\n          isLoading: false,\r\n          isInitialized: true,\r\n        }))\r\n      })\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\r\n      {!isInitialized || isLoading ? (\r\n        <Card>\r\n          <StyledCardBody>\r\n            <Loading />\r\n          </StyledCardBody>\r\n        </Card>\r\n      ) : (\r\n        <PastRoundCard error={error} data={roundData} />\r\n      )}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default PastLotteryRoundViewer\r\n","import React, { lazy, Suspense, useContext, useMemo } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'acentswap-uikit3'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useTheme from 'hooks/useTheme'\r\nimport Loading from '../Loading'\r\n\r\nconst Line = lazy(() => import('./LineChartWrapper'))\r\nconst Bar = lazy(() => import('./BarChartWrapper'))\r\n\r\nconst InnerWrapper = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\ninterface HistoryChartProps {\r\n  showLast: 'max' | number\r\n}\r\n\r\nconst HistoryChart: React.FC<HistoryChartProps> = ({ showLast }) => {\r\n  const { t } = useTranslation()\r\n  const { isDark } = useTheme()\r\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\r\n  const getDataArray = (kind) => {\r\n    const rawData = historyData\r\n      .map((dataPoint) => {\r\n        return dataPoint[kind]\r\n      })\r\n      .reverse()\r\n\r\n    return showLast === 'max' ? rawData : rawData.slice(Number(showLast) * -1)\r\n  }\r\n\r\n  const lineStyles = ({ color }) => {\r\n    return {\r\n      borderColor: color,\r\n      fill: false,\r\n      borderWidth: 2,\r\n      pointRadius: 0,\r\n      pointHitRadius: 10,\r\n    }\r\n  }\r\n\r\n  const chartData = {\r\n    labels: getDataArray('lotteryNumber'),\r\n    datasets: [\r\n      {\r\n        label: 'Pool Size',\r\n        data: getDataArray('poolSize'),\r\n        yAxisID: 'y-axis-pool',\r\n        ...lineStyles({ color: '#8F80BA' }),\r\n      },\r\n      {\r\n        label: 'Burned',\r\n        data: getDataArray('burned'),\r\n        yAxisID: 'y-axis-burned',\r\n        ...lineStyles({ color: '#34612f' }),\r\n      },\r\n    ],\r\n  }\r\n\r\n  const axesStyles = ({ color, lineHeight }) => {\r\n    return {\r\n      borderCapStyle: 'round',\r\n      gridLines: { display: false },\r\n      ticks: {\r\n        fontFamily: 'Kanit, sans-serif',\r\n        fontColor: color,\r\n        fontSize: 12,\r\n        lineHeight,\r\n        maxRotation: 0,\r\n        beginAtZero: true,\r\n        autoSkipPadding: 15,\r\n        userCallback: (value) => {\r\n          return value.toLocaleString()\r\n        },\r\n      },\r\n    }\r\n  }\r\n\r\n  const options = useMemo(() => {\r\n    return {\r\n      tooltips: {\r\n        mode: 'index',\r\n        intersect: false,\r\n      },\r\n      legend: { display: false },\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            type: 'linear',\r\n            position: 'left',\r\n            id: 'y-axis-pool',\r\n            ...axesStyles({ color: '#1b3a18', lineHeight: 1.6 }),\r\n          },\r\n          {\r\n            type: 'linear',\r\n            position: 'right',\r\n            id: 'y-axis-burned',\r\n            ...axesStyles({ color: '#34612f', lineHeight: 1.5 }),\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            ...axesStyles({ color: isDark ? '#FFFFFF' : '#452A7A', lineHeight: 1 }),\r\n          },\r\n        ],\r\n      },\r\n    }\r\n  }, [isDark])\r\n\r\n  return (\r\n    <>\r\n      {historyError && (\r\n        <InnerWrapper>\r\n          <Text>{t('Error fetching data')}</Text>\r\n        </InnerWrapper>\r\n      )}\r\n      {!historyError && historyData.length > 1 ? (\r\n        <Suspense fallback={<div>{t('Loading...')}</div>}>\r\n          {showLast === 50 || showLast === 100 ? (\r\n            <Bar data={chartData} options={options} />\r\n          ) : (\r\n            <Line data={chartData} options={options} type=\"line\" />\r\n          )}\r\n        </Suspense>\r\n      ) : (\r\n        <InnerWrapper>\r\n          <Loading />\r\n        </InnerWrapper>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default HistoryChart\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  margin: 24px 0 24px;\r\n`\r\n\r\nconst LegendItem = styled.div`\r\n  display: flex;\r\n  margin-right: 18px;\r\n  align-items: center;\r\n`\r\n\r\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\r\n  width: 20px;\r\n  height: 20px;\r\n  border-radius: 10px;\r\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\r\n  margin-right: 6px;\r\n`\r\n\r\nconst Legend = () => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <LegendItem>\r\n        <Circle isPoolSize />\r\n        <Text>{t('Pool Size')}</Text>\r\n      </LegendItem>\r\n      <LegendItem>\r\n        <Circle />\r\n        <Text>{t('Burned')}</Text>\r\n      </LegendItem>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default Legend\r\n","import React, { useState } from 'react'\r\nimport { Heading, Card, CardBody, Text } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport HistoryChart from './HistoryChart'\r\nimport Legend from './Legend'\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  flex-wrap: wrap;\r\n  flex-direction: column-reverse;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-wrap: nowrap;\r\n    flex-direction: row;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  margin-top: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 0;\r\n  }\r\n\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst PastDrawsHistoryCard: React.FC = () => {\r\n  const { t } = useTranslation()\r\n  const [showLast, setShowLast] = useState<'max' | number>(50)\r\n  const handleShowLastChange = (option: OptionProps): void => {\r\n    setShowLast(option.value)\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <Heading size=\"md\">{t('History')}</Heading>\r\n        <Wrapper>\r\n          <Legend />\r\n          <LabelWrapper>\r\n            <Text textTransform=\"uppercase\">{t('Show Last')}</Text>\r\n            <Select\r\n              options={[\r\n                {\r\n                  label: '50',\r\n                  value: 50,\r\n                },\r\n                {\r\n                  label: '100',\r\n                  value: 100,\r\n                },\r\n                {\r\n                  label: '200',\r\n                  value: 200,\r\n                },\r\n                {\r\n                  label: 'Max',\r\n                  value: 'max',\r\n                },\r\n              ]}\r\n              onChange={handleShowLastChange}\r\n            />\r\n          </LabelWrapper>\r\n        </Wrapper>\r\n        <HistoryChart showLast={showLast} />\r\n      </CardBody>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default PastDrawsHistoryCard\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { BaseLayout } from 'acentswap-uikit3'\r\nimport ClaimPrizesCard from './components/ClaimPrizesCard'\r\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\r\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\r\n\r\nconst Cards = styled(BaseLayout)`\r\n  align-items: start;\r\n  margin-bottom: 32px;\r\n\r\n  & > div {\r\n    grid-column: span 6;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    & > div {\r\n      grid-column: span 12;\r\n    }\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    & > div {\r\n      grid-column: span 6;\r\n    }\r\n  }\r\n`\r\n\r\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst PastDrawsPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      <ClaimPrizesCard />\r\n      <Cards>\r\n        <PastLotteryRoundViewer />\r\n        <SecondCardColumnWrapper>\r\n          <PastDrawsHistoryCard />\r\n        </SecondCardColumnWrapper>\r\n      </Cards>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PastDrawsPage\r\n","import React, { useState, useEffect } from 'react'\r\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\r\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\r\nimport { useLottery } from 'hooks/useContract'\r\nimport Page from 'components/layout/Page'\r\nimport Hero from './components/Hero'\r\nimport PastDrawsPage from './PastDrawsPage'\r\n\r\nconst Lottery: React.FC = () => {\r\n  const lotteryContract = useLottery()\r\n  const [historyData, setHistoryData] = useState([])\r\n  const [historyError, setHistoryError] = useState(false)\r\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\r\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\r\n\r\n  useEffect(() => {\r\n    fetch(`https://api.acentswap.com/api/lotteryHistory`)\r\n      .then((response) => response.json())\r\n      .then((data) => setHistoryData(data))\r\n      .catch(() => {\r\n        setHistoryError(true)\r\n      })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    const getInitialLotteryIndex = async () => {\r\n      const index = await getLotteryIssueIndex(lotteryContract)\r\n      const previousLotteryNumber = index - 1\r\n\r\n      setCurrentLotteryNumber(index)\r\n      setMostRecentLotteryNumber(previousLotteryNumber)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      getInitialLotteryIndex()\r\n    }\r\n  }, [lotteryContract])\r\n\r\n  return (\r\n    <>\r\n      <Hero />\r\n      <Page>\r\n        <PastLotteryDataContext.Provider\r\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\r\n        >\r\n          <PastDrawsPage />\r\n        </PastLotteryDataContext.Provider>\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Lottery\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from 'acentswap-uikit3'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardBusdValue\r\n","import { useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = () => {\r\n    setStateLastUpdated(Date.now())\r\n  }\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { BIG_ZERO } from 'utils/bigNumber'\r\nimport useRefresh from './useRefresh'\r\nimport {\r\n  getTotalRewards,\r\n  getTotalClaim,\r\n  getMatchingRewardLength,\r\n  getWinningNumbers,\r\n  getTickets,\r\n} from '../utils/lotteryUtils'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\nconst useTickets = (lotteryNumber = null) => {\r\n  const [tickets, setTickets] = useState([])\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\r\n      setTickets(res)\r\n    }\r\n\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\r\n\r\n  return tickets\r\n}\r\n\r\nexport const useTotalRewards = () => {\r\n  const [rewards, setRewards] = useState(BIG_ZERO)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const res = await getTotalRewards(lotteryContract)\r\n      setRewards(new BigNumber(res))\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, fastRefresh])\r\n\r\n  return rewards\r\n}\r\n\r\nexport const useTotalClaim = () => {\r\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\r\n  const [claimLoading, setClaimLoading] = useState(false)\r\n  const { account } = useWeb3React()\r\n  const ticketsContract = useLotteryTicket()\r\n  const lotteryContract = useLottery()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  const fetchBalance = useCallback(async () => {\r\n    setClaimLoading(true)\r\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\r\n    setClaimAmount(claim)\r\n    setClaimLoading(false)\r\n  }, [account, lotteryContract, ticketsContract])\r\n\r\n  useEffect(() => {\r\n    if (account && lotteryContract && ticketsContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\r\n\r\n  return { claimLoading, claimAmount, setLastUpdated }\r\n}\r\n\r\nexport const useWinningNumbers = () => {\r\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const rewards = await getWinningNumbers(lotteryContract)\r\n      setWinningNumbers(rewards)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\r\n\r\n  return winningNumbers\r\n}\r\n\r\nexport const useMatchingRewardLength = (numbers) => {\r\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\r\n  const lotteryContract = useLottery()\r\n  const { fastRefresh } = useRefresh()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\r\n      setMatchingNumbers(matchedNumbers)\r\n    }\r\n\r\n    if (lotteryContract) {\r\n      fetchBalance()\r\n    }\r\n  }, [lotteryContract, numbers, fastRefresh])\r\n\r\n  return matchingNumbers\r\n}\r\n\r\nexport default useTickets\r\n","/* eslint-disable no-await-in-loop */\r\nimport BigNumber from 'bignumber.js'\r\nimport { Interface } from '@ethersproject/abi'\r\nimport { getWeb3NoAccount } from 'utils/web3'\r\nimport MultiCallAbi from 'config/abi/Multicall.json'\r\nimport ticketAbi from 'config/abi/lotteryNft.json'\r\nimport lotteryAbi from 'config/abi/lottery.json'\r\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\r\nimport { AbiItem } from 'web3-utils'\r\nimport { getMulticallAddress } from './addressHelpers'\r\nimport { BIG_ZERO } from './bigNumber'\r\n\r\nexport const multiCall = async (abi, calls) => {\r\n  const web3 = getWeb3NoAccount()\r\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\r\n  const itf = new Interface(abi)\r\n  let res = []\r\n  if (calls.length > 100) {\r\n    let i = 0\r\n    while (i < calls.length / 100) {\r\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\r\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n      const { returnData } = await multi.methods.aggregate(calldata).call()\r\n      i++\r\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\r\n    }\r\n  } else {\r\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\r\n    const { returnData } = await multi.methods.aggregate(calldata).call()\r\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\r\n  }\r\n  return res\r\n}\r\n\r\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\r\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n  const ticketIssues = await multiCall(ticketAbi, calls2)\r\n\r\n  const finalTokenids = []\r\n  ticketIssues.forEach(async (ticketIssue, i) => {\r\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\r\n      finalTokenids.push(tokenIds[i])\r\n    }\r\n  })\r\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\r\n  const tickets = await multiCall(ticketAbi, calls3)\r\n\r\n  await getLotteryStatus(lotteryContract)\r\n  return tickets\r\n}\r\n\r\nexport const getTicketsAmount = async (ticketsContract, account) => {\r\n  return ticketsContract.methods.balanceOf(account).call()\r\n}\r\n\r\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\r\n  await lotteryContract.methods.issueIndex().call()\r\n  const length = await getTicketsAmount(ticketsContract, account)\r\n  // eslint-disable-next-line prefer-spread\r\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n    ticketsContract.options.address,\r\n    'tokenOfOwnerByIndex',\r\n    [account, i],\r\n  ])\r\n  const res = await multiCall(ticketAbi, calls1)\r\n  const tokenIds = res.map((id) => id.toString())\r\n\r\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n  const claimedStatus = await multiCall(ticketAbi, calls2)\r\n\r\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\r\n\r\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n  const rewards = await multiCall(lotteryAbi, calls3)\r\n\r\n  let finalTokenIds = []\r\n  rewards.forEach((r, i) => {\r\n    if (r > 0) {\r\n      finalTokenIds.push(unClaimedIds[i])\r\n    }\r\n  })\r\n\r\n  if (finalTokenIds.length > 200) {\r\n    finalTokenIds = finalTokenIds.slice(0, 200)\r\n  }\r\n\r\n  try {\r\n    return lotteryContract.methods\r\n      .multiClaim(finalTokenIds)\r\n      .send({ from: account })\r\n      .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n      })\r\n  } catch (err) {\r\n    return console.error(err)\r\n  }\r\n}\r\n\r\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\r\n  try {\r\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n    const length = await getTicketsAmount(ticketsContract, account)\r\n    // eslint-disable-next-line prefer-spread\r\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\r\n      ticketsContract.options.address,\r\n      'tokenOfOwnerByIndex',\r\n      [account, i],\r\n    ])\r\n    const res = await multiCall(ticketAbi, calls1)\r\n    const tokenIds = res.map((id) => id.toString())\r\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\r\n    const ticketIssues = await multiCall(ticketAbi, calls2)\r\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\r\n    const claimedStatus = await multiCall(ticketAbi, calls3)\r\n\r\n    const drawed = await getLotteryStatus(lotteryContract)\r\n\r\n    const finalTokenIds = []\r\n    ticketIssues.forEach(async (ticketIssue, i) => {\r\n      // eslint-disable-next-line no-empty\r\n      if (!drawed && ticketIssue.toString() === issueIndex) {\r\n      } else if (!claimedStatus[i][0]) {\r\n        finalTokenIds.push(tokenIds[i])\r\n      }\r\n    })\r\n\r\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\r\n\r\n    const rewards = await multiCall(lotteryAbi, calls4)\r\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\r\n\r\n    return claim\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return BIG_ZERO\r\n}\r\n\r\nexport const getTotalRewards = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\r\n}\r\n\r\nexport const getMax = async (lotteryContract) => {\r\n  return lotteryContract.methods.maxNumber().call()\r\n}\r\n\r\nexport const getLotteryIssueIndex = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  return issueIndex\r\n}\r\n\r\nexport const getLotteryStatus = async (lotteryContract) => {\r\n  return lotteryContract.methods.drawed().call()\r\n}\r\n\r\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\r\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n  if (!drawed) {\r\n    issueIndex -= 1\r\n  }\r\n  try {\r\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\r\n\r\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\r\n  } catch (err) {\r\n    console.error(err)\r\n  }\r\n  return 0\r\n}\r\n\r\nexport const getWinningNumbers = async (lotteryContract) => {\r\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\r\n  const numbers = []\r\n  const drawed = await lotteryContract.methods.drawed().call()\r\n\r\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\r\n    return [0, 0, 0, 0]\r\n  }\r\n  if (!drawed) {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\r\n    }\r\n  } else {\r\n    for (let i = 0; i < 4; i++) {\r\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\r\n    }\r\n  }\r\n  return numbers\r\n}\r\n","import { useCallback, useState, useEffect } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\r\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\r\n\r\nexport const useMultiClaimLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n  const lotteryTicketContract = useLotteryTicket()\r\n\r\n  const handleClaim = useCallback(async () => {\r\n    try {\r\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\r\n      return txHash\r\n    } catch (e) {\r\n      return false\r\n    }\r\n  }, [account, lotteryContract, lotteryTicketContract])\r\n\r\n  return { onMultiClaim: handleClaim }\r\n}\r\n\r\nexport const useMultiBuyLottery = () => {\r\n  const { account } = useWeb3React()\r\n  const lotteryContract = useLottery()\r\n\r\n  const handleBuy = useCallback(\r\n    async (amount: string, numbers: Array<any>) => {\r\n      try {\r\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\r\n        return txHash\r\n      } catch (e) {\r\n        return false\r\n      }\r\n    },\r\n    [account, lotteryContract],\r\n  )\r\n\r\n  return { onMultiBuy: handleBuy }\r\n}\r\n\r\nexport const useMaxNumber = () => {\r\n  const [max, setMax] = useState(5)\r\n  const lotteryContract = useLottery()\r\n\r\n  const fetchMax = useCallback(async () => {\r\n    const maxNumber = await getMax(lotteryContract)\r\n    setMax(maxNumber)\r\n  }, [lotteryContract])\r\n\r\n  useEffect(() => {\r\n    if (lotteryContract) {\r\n      fetchMax()\r\n    }\r\n  }, [lotteryContract, fetchMax])\r\n\r\n  return max\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from 'acentswap-uikit3'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOption, setSelectedOption] = useState(options[0])\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    setSelectedOption(option)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(option)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{selectedOption.label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedOption.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n"],"sourceRoot":""}