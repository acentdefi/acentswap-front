{"version":3,"sources":["utils/latinise.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","views/Farms/components/types.ts","utils/getLiquidityUrlPathParts.ts","views/Farms/components/FarmCard/DetailsSection.tsx","views/Farms/components/FarmCard/CardHeading.tsx","components/ModalInput/ModalInput.tsx","views/Farms/components/DepositModal.tsx","views/Farms/components/WithdrawModal.tsx","views/Farms/components/FarmCard/StakeAction.tsx","views/Farms/components/FarmCard/HarvestAction.tsx","views/Farms/components/FarmCard/CardActionsContainer.tsx","views/Farms/components/FarmCard/ApyButton.tsx","views/Farms/components/FarmCard/FarmCard.tsx","hooks/useDelayedUnmount.ts","views/Farms/components/FarmTable/Apr.tsx","views/Farms/components/FarmTable/Farm.tsx","views/Farms/components/FarmTable/Earned.tsx","views/Farms/components/FarmTable/Details.tsx","views/Farms/components/FarmTable/Multiplier.tsx","views/Farms/components/FarmTable/Liquidity.tsx","views/Farms/components/FarmTable/Actions/styles.ts","views/Farms/components/FarmTable/Actions/HarvestAction.tsx","views/Farms/components/FarmTable/Actions/StakedAction.tsx","views/Farms/components/FarmTable/Actions/ActionPanel.tsx","views/Farms/components/FarmTable/CellLayout.tsx","views/Farms/components/FarmTable/Row.tsx","views/Farms/components/FarmTable/FarmTable.tsx","views/Farms/components/FarmTabButtons/index.tsx","views/Farms/components/SearchInput.tsx","views/Farms/components/ToggleView/ToggleView.tsx","views/Farms/Farms.tsx","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","components/Select/Select.tsx"],"names":["Latinise","latin_map","τ","Τ","latinise","input","replace","x","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","t","useTranslation","aria-label","role","color","bold","defaultProps","ViewMode","getLiquidityUrlPathParts","quoteTokenAddress","tokenAddress","wBNBAddressString","getWbnbAddress","quoteTokenAddressString","process","tokenAddressString","secondPart","StyledLinkExternal","LinkExternal","DetailsSection","bscScanAddress","infoAddress","removed","totalValueFormatted","lpLabel","addLiquidityUrl","justifyContent","href","name","Flex","MultiplierTag","Tag","CardHeading","multiplier","isCommunityFarm","farmImage","tokenSymbol","alignItems","mb","src","alt","width","height","flexDirection","split","variant","StyledTokenInput","isWarning","shadows","warning","inset","text","StyledInput","Input","mediaQueries","xs","sm","StyledErrorMessage","Text","ModalInput","max","symbol","onChange","onSelectMax","value","inputTitle","isBalanceZero","style","position","pl","fontSize","balance","balanceNumber","Number","toLocaleString","undefined","maximumFractionDigits","displayBalance","pattern","inputMode","step","min","placeholder","scale","mr","external","DepositModal","onConfirm","onDismiss","tokenName","useState","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","getFullDisplayBalance","valNumber","BigNumber","fullBalanceNumber","handleChange","useCallback","e","currentTarget","validity","valid","handleSelectMax","title","ModalActions","disabled","isFinite","eq","gt","a","alignSelf","WithdrawModal","IconButtonWrapper","StakeAction","stakedBalance","tokenBalance","pid","onStake","useStake","onUnstake","useUnstake","location","useLocation","stakedBalanceNumber","getBalanceNumber","useModal","onPresentDeposit","onPresentWithdraw","some","item","pathname","includes","HarvestAction","earnings","canHarvest","account","useWeb3React","onReward","useHarvest","cakePrice","usePriceCakeBusd","rawEarningsBalance","earningsBusd","multipliedBy","toNumber","CardBusdValue","Action","CardActions","farm","requestedApproval","setRequestedApproval","lpAddresses","userData","allowance","allowanceAsString","tokenBalanceAsString","stakedBalanceAsString","earningsAsString","lpAddress","getAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","web3","useWeb3","lpContract","getBep20Contract","onApprove","useApprove","handleApprove","console","error","textTransform","pr","mt","UnlockButton","ApyButton","apr","ApyCalculatorModal","linkLabel","tokenPrice","linkHref","onPresentApyModal","event","stopPropagation","ml","RainbowLight","keyframes","StyledCardAccent","FCard","props","card","background","Divider","borderColor","ExpandingWrapper","FarmCard","showExpandableSection","setShowExpandableSection","toLocaleLowerCase","liquidity","earnLabel","dual","farmAPR","depositFee","depositFeeBP","liquidityUrlPathParts","quoteToken","address","token","BASE_ADD_LIQUIDITY_URL","isCommunity","display","harvestInterval","CardActionsContainer","useDelayedUnmount","isMounted","delayTime","shouldRender","setShouldRender","useEffect","timeoutId","setTimeout","clearTimeout","Container","textSubtle","AprWrapper","Apr","originalValue","hideButton","IconImage","Image","Farm","image","label","useFarmUser","rawStakedBalance","Amount","span","earned","textDisabled","Earned","userDataReady","ArrowIcon","ChevronDownIcon","toggled","Details","actionPanelToggled","isMobile","useMatchBreakpoints","isXl","ReferenceElement","MultiplierWrapper","lg","Multiplier","displayMultiplier","toLowerCase","tooltipContent","useTooltip","placement","tooltipOffset","targetRef","tooltip","tooltipVisible","ref","LiquidityWrapper","Liquidity","displayLiquidity","ActionContainer","xl","ActionTitles","Title","secondary","Subtle","ActionContent","Staked","earningsBigNumber","isZero","useCountUp","start","end","duration","separator","decimals","countUp","update","updateValue","useRef","current","marginBottom","marginTop","expandAnimation","collapseAnimation","css","StakeContainer","TagsContainer","InfoContainer","ValueContainer","ValueWrapper","ActionPanel","details","isActive","bsc","info","StakedAction","Label","ContentContainer","CellLayout","children","MobileColumnSchema","id","translationId","sortable","DesktopColumnSchema","cells","CellInner","StyledTr","tr","EarnedMobileCell","td","AprMobileCell","FarmMobileCell","Row","hasStakedAmount","actionPanelExpanded","setActionPanelExpanded","shouldRenderChild","toggleActionPanel","isXs","tableSchema","columnNames","map","column","Object","keys","key","columnIndex","indexOf","React","createElement","colSpan","dropShadow","TableWrapper","StyledTable","table","TableBody","tbody","TableContainer","ScrollButtonContainer","FarmTable","tableWrapperEl","data","columns","rows","useTable","sortColumn","row","original","scrollIntoView","behavior","FarmTabButtons","activeIndex","hasStakeInFinishedFarms","url","useRouteMatch","as","Link","to","show","InputWrapper","SearchInput","onChangeCallback","setToggled","searchText","setSearchText","debouncedOnChange","debounce","target","onBlur","ToggleView","viewMode","onToggle","handleToggle","mode","CARD","TABLE","ControlContainer","ToggleWrapper","LabelWrapper","FilterContainer","ViewControls","Farms","path","useFarms","farmsLP","userDataLoaded","query","setQuery","usePersistState","setViewMode","sortOption","setSortOption","prices","useGetApiPrices","dispatch","useAppDispatch","fastRefresh","useRefresh","fetchFarmUserDataAsync","isArchived","isInactive","stakedOnly","setStakedOnly","setLoadArchivedFarmsData","fetchFarmsPublicDataAsync","activeFarms","filter","isArchivedPid","inactiveFarms","archivedFarms","stakedOnlyFarms","stakedInactiveFarms","stakedArchivedFarms","farmsList","farmsToDisplay","farmsToDisplayWithAPR","lpTotalInQuoteToken","quoteTokenPriceUsd","totalLiquidity","times","getFarmApr","poolWeight","lowercaseQuery","loadMoreRef","numberOfFarmsVisible","setNumberOfFarmsVisible","observerIsSet","setObserverIsSet","farmsStakedMemoized","farmsStaked","farms","orderBy","slice","sortFarms","IntersectionObserver","entries","isIntersecting","farmsCurrentlyVisible","rootMargin","threshold","observe","rowData","PageHeader","size","Page","checked","length","Select","options","option","marginLeft","sort","b","exact","renderContent","CardValue","lineHeight","prefix","StyledSpacer","Spacer","s","spacing","useContext","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","l","Children","toArray","child","i","DropDownHeader","inputSecondary","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","containerSize","setContainerSize","toggling","onOptionClicked","offsetWidth","offsetHeight"],"mappings":"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","file":"static/js/9.33fed9e3.chunk.js","sourcesContent":["export const Latinise = {\r\n  latin_map: {\r\n    τ: 't',\r\n    Τ: 'T',\r\n  },\r\n}\r\n\r\nexport const latinise = (input: string) => {\r\n  return input.replace(/[^A-Za-z0-9[\\] ]/g, (x) => Latinise.latin_map[x] || x)\r\n}\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, ChevronUpIcon, Text } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ExpandableSectionButtonProps {\r\n  onClick?: () => void\r\n  expanded?: boolean\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n\r\n  svg {\r\n    fill: ${({ theme }) => theme.colors.primary};\r\n  }\r\n`\r\n\r\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\r\n      <Text color=\"primary\" bold>\r\n        {expanded ? t('Hide') : t('Details')}\r\n      </Text>\r\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nExpandableSectionButton.defaultProps = {\r\n  expanded: false,\r\n}\r\n\r\nexport default ExpandableSectionButton\r\n","export type TableProps = {\r\n  data?: TableDataTypes[]\r\n  selectedFilters?: string\r\n  sortBy?: string\r\n  sortDir?: string\r\n  onSort?: (value: string) => void\r\n}\r\n\r\nexport type ColumnsDefTypes = {\r\n  id: number\r\n  label: string\r\n  name: string\r\n  translationId: number\r\n  sortable: boolean\r\n}\r\n\r\nexport type ScrollBarProps = {\r\n  ref: string\r\n  width: number\r\n}\r\n\r\nexport type TableDataTypes = {\r\n  POOL: string\r\n  APR: string\r\n  EARNED: string\r\n  STAKED: string\r\n  DETAILS: string\r\n  LINKS: string\r\n}\r\n\r\nexport const MobileColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport const DesktopColumnSchema: ColumnsDefTypes[] = [\r\n  {\r\n    id: 1,\r\n    name: 'farm',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n  {\r\n    id: 2,\r\n    name: 'earned',\r\n    translationId: 1072,\r\n    sortable: true,\r\n    label: 'Earned',\r\n  },\r\n  {\r\n    id: 3,\r\n    name: 'apr',\r\n    translationId: 736,\r\n    sortable: true,\r\n    label: 'APR',\r\n  },\r\n  {\r\n    id: 4,\r\n    name: 'liquidity',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Liquidity',\r\n  },\r\n  {\r\n    id: 5,\r\n    name: 'multiplier',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: 'Multiplier',\r\n  },\r\n  {\r\n    id: 6,\r\n    name: 'details',\r\n    translationId: 999,\r\n    sortable: true,\r\n    label: '',\r\n  },\r\n]\r\n\r\nexport enum ViewMode {\r\n  'TABLE' = 'TABLE',\r\n  'CARD' = 'CARD',\r\n}\r\n","// Constructing the two forward-slash-separated parts of the 'Add Liquidity' URL\r\n// Each part of the url represents a different side of the LP pair.\r\nimport { getWbnbAddress } from './addressHelpers'\r\n\r\nconst getLiquidityUrlPathParts = ({ quoteTokenAddress, tokenAddress }) => {\r\n  const chainId = process.env.REACT_APP_CHAIN_ID\r\n  const wBNBAddressString = getWbnbAddress()\r\n  const quoteTokenAddressString: string = quoteTokenAddress ? quoteTokenAddress[chainId] : null\r\n  const tokenAddressString: string = tokenAddress ? tokenAddress[chainId] : null\r\n  const firstPart =\r\n    !quoteTokenAddressString || quoteTokenAddressString === wBNBAddressString ? 'BNB' : quoteTokenAddressString\r\n  const secondPart = !tokenAddressString || tokenAddressString === wBNBAddressString ? 'BNB' : tokenAddressString\r\n  return `${firstPart}/${secondPart}`\r\n}\r\n\r\nexport default getLiquidityUrlPathParts\r\n","import React from 'react'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport styled from 'styled-components'\r\nimport { Text, Flex, LinkExternal } from 'acentswap-uikit3'\r\n\r\nexport interface ExpandableSectionProps {\r\n  bscScanAddress?: string\r\n  infoAddress?: string\r\n  removed?: boolean\r\n  totalValueFormatted?: string\r\n  lpLabel?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n  margin-top: 24px;\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst DetailsSection: React.FC<ExpandableSectionProps> = ({\r\n  bscScanAddress,\r\n  infoAddress,\r\n  removed,\r\n  totalValueFormatted,\r\n  lpLabel,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n\r\n  return (\r\n    <Wrapper>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Total Liquidity')}:</Text>\r\n        <Text>{totalValueFormatted}</Text>\r\n      </Flex>\r\n      {!removed && (\r\n        <StyledLinkExternal href={addLiquidityUrl}>{t(`Get ${lpLabel}`, { name: lpLabel })}</StyledLinkExternal>\r\n      )}\r\n      <StyledLinkExternal href={bscScanAddress}>{t('View Contract')}</StyledLinkExternal>\r\n      <StyledLinkExternal href={infoAddress}>{t('See Pair Info')}</StyledLinkExternal>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default DetailsSection\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Tag, Flex, Heading, Image } from 'acentswap-uikit3'\r\nimport { CommunityTag, CoreTag } from 'components/Tags'\r\n\r\nexport interface ExpandableSectionProps {\r\n  lpLabel?: string\r\n  multiplier?: string\r\n  isCommunityFarm?: boolean\r\n  farmImage?: string\r\n  tokenSymbol?: string\r\n}\r\n\r\nconst Wrapper = styled(Flex)`\r\n  svg {\r\n    margin-right: 4px;\r\n  }\r\n`\r\n\r\nconst MultiplierTag = styled(Tag)`\r\n  margin-left: 4px;\r\n`\r\n\r\nconst CardHeading: React.FC<ExpandableSectionProps> = ({\r\n  lpLabel,\r\n  multiplier,\r\n  isCommunityFarm,\r\n  farmImage,\r\n  tokenSymbol,\r\n}) => {\r\n  return (\r\n    <Wrapper justifyContent=\"space-between\" alignItems=\"center\" mb=\"12px\">\r\n      <Image src={`/images/farms/${farmImage}.png`} alt={tokenSymbol} width={64} height={64} />\r\n      <Flex flexDirection=\"column\" alignItems=\"flex-end\">\r\n        <Heading mb=\"4px\">{lpLabel.split(' ')[0]}</Heading>\r\n        <Flex justifyContent=\"center\">\r\n          {isCommunityFarm ? <CommunityTag /> : <CoreTag />}\r\n          <MultiplierTag variant=\"secondary\">{multiplier}</MultiplierTag>\r\n        </Flex>\r\n      </Flex>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default CardHeading\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Text, Button, Input, InputProps, Flex, Link } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface ModalInputProps {\r\n  max: string\r\n  symbol: string\r\n  onSelectMax?: () => void\r\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\r\n  placeholder?: string\r\n  value: string\r\n  addLiquidityUrl?: string\r\n  inputTitle?: string\r\n}\r\n\r\nconst getBoxShadow = ({ isWarning = false, theme }) => {\r\n  if (isWarning) {\r\n    return theme.shadows.warning\r\n  }\r\n\r\n  return theme.shadows.inset\r\n}\r\n\r\nconst StyledTokenInput = styled.div<InputProps>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  box-shadow: ${getBoxShadow};\r\n  color: ${({ theme }) => theme.colors.text};\r\n  padding: 8px 16px 8px 0;\r\n  width: 100%;\r\n`\r\n\r\nconst StyledInput = styled(Input)`\r\n  box-shadow: none;\r\n  width: 60px;\r\n  margin: 0 8px;\r\n  padding: 0 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xs} {\r\n    width: 80px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n  }\r\n`\r\n\r\nconst StyledErrorMessage = styled(Text)`\r\n  position: absolute;\r\n  bottom: -22px;\r\n  a {\r\n    display: inline;\r\n  }\r\n`\r\n\r\nconst ModalInput: React.FC<ModalInputProps> = ({\r\n  max,\r\n  symbol,\r\n  onChange,\r\n  onSelectMax,\r\n  value,\r\n  addLiquidityUrl,\r\n  inputTitle,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const isBalanceZero = max === '0' || !max\r\n\r\n  const displayBalance = (balance: string) => {\r\n    if (isBalanceZero) {\r\n      return '0'\r\n    }\r\n    const balanceNumber = Number(balance)\r\n    if (balanceNumber > 0 && balanceNumber < 0.0001) {\r\n      return balanceNumber.toLocaleString(undefined, { maximumFractionDigits: 20 })\r\n    }\r\n    return balanceNumber.toLocaleString()\r\n  }\r\n\r\n  return (\r\n    <div style={{ position: 'relative' }}>\r\n      <StyledTokenInput isWarning={isBalanceZero}>\r\n        <Flex justifyContent=\"space-between\" pl=\"16px\">\r\n          <Text fontSize=\"14px\">{inputTitle}</Text>\r\n          <Text fontSize=\"14px\">\r\n            {t('Balance')}: {displayBalance(max)}\r\n          </Text>\r\n        </Flex>\r\n        <Flex alignItems=\"flex-end\" justifyContent=\"space-around\">\r\n          <StyledInput\r\n            pattern=\"^[0-9]*[.,]?[0-9]*$\"\r\n            inputMode=\"decimal\"\r\n            step=\"any\"\r\n            min=\"0\"\r\n            onChange={onChange}\r\n            placeholder=\"0\"\r\n            value={value}\r\n          />\r\n          <Button scale=\"sm\" onClick={onSelectMax} mr=\"8px\">\r\n            {t('Max')}\r\n          </Button>\r\n          <Text fontSize=\"16px\">{symbol}</Text>\r\n        </Flex>\r\n      </StyledTokenInput>\r\n      {isBalanceZero && (\r\n        <StyledErrorMessage fontSize=\"14px\" color=\"failure\">\r\n          No tokens to stake:{' '}\r\n          <Link fontSize=\"14px\" bold={false} href={addLiquidityUrl} external color=\"failure\">\r\n            {t('get')} {symbol}\r\n          </Link>\r\n        </StyledErrorMessage>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ModalInput\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal, LinkExternal } from 'acentswap-uikit3'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface DepositModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '', addLiquidityUrl }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Stake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        value={val}\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n        inputTitle={t('Stake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n      <LinkExternal href={addLiquidityUrl} style={{ alignSelf: 'center' }}>\r\n        {t('Get')} {tokenName}\r\n      </LinkExternal>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default DepositModal\r\n","import BigNumber from 'bignumber.js'\r\nimport React, { useCallback, useMemo, useState } from 'react'\r\nimport { Button, Modal } from 'acentswap-uikit3'\r\nimport ModalActions from 'components/ModalActions'\r\nimport ModalInput from 'components/ModalInput'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getFullDisplayBalance } from 'utils/formatBalance'\r\n\r\ninterface WithdrawModalProps {\r\n  max: BigNumber\r\n  onConfirm: (amount: string) => void\r\n  onDismiss?: () => void\r\n  tokenName?: string\r\n}\r\n\r\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\r\n  const [val, setVal] = useState('')\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { t } = useTranslation()\r\n  const fullBalance = useMemo(() => {\r\n    return getFullDisplayBalance(max)\r\n  }, [max])\r\n\r\n  const valNumber = new BigNumber(val)\r\n  const fullBalanceNumber = new BigNumber(fullBalance)\r\n\r\n  const handleChange = useCallback(\r\n    (e: React.FormEvent<HTMLInputElement>) => {\r\n      if (e.currentTarget.validity.valid) {\r\n        setVal(e.currentTarget.value.replace(/,/g, '.'))\r\n      }\r\n    },\r\n    [setVal],\r\n  )\r\n\r\n  const handleSelectMax = useCallback(() => {\r\n    setVal(fullBalance)\r\n  }, [fullBalance, setVal])\r\n\r\n  return (\r\n    <Modal title={t('Unstake LP tokens')} onDismiss={onDismiss}>\r\n      <ModalInput\r\n        onSelectMax={handleSelectMax}\r\n        onChange={handleChange}\r\n        value={val}\r\n        max={fullBalance}\r\n        symbol={tokenName}\r\n        inputTitle={t('Unstake')}\r\n      />\r\n      <ModalActions>\r\n        <Button variant=\"secondary\" onClick={onDismiss} width=\"100%\" disabled={pendingTx}>\r\n          {t('Cancel')}\r\n        </Button>\r\n        <Button\r\n          disabled={pendingTx || !valNumber.isFinite() || valNumber.eq(0) || valNumber.gt(fullBalanceNumber)}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onConfirm(val)\r\n            setPendingTx(false)\r\n            onDismiss()\r\n          }}\r\n          width=\"100%\"\r\n        >\r\n          {pendingTx ? t('Pending Confirmation') : t('Confirm')}\r\n        </Button>\r\n      </ModalActions>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default WithdrawModal\r\n","import React, { useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from 'acentswap-uikit3'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport DepositModal from '../DepositModal'\r\nimport WithdrawModal from '../WithdrawModal'\r\n\r\ninterface FarmCardActionsProps {\r\n  stakedBalance?: BigNumber\r\n  tokenBalance?: BigNumber\r\n  tokenName?: string\r\n  pid?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n  svg {\r\n    width: 20px;\r\n  }\r\n`\r\n\r\nconst StakeAction: React.FC<FarmCardActionsProps> = ({\r\n  stakedBalance,\r\n  tokenBalance,\r\n  tokenName,\r\n  pid,\r\n  addLiquidityUrl,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const location = useLocation()\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\r\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceNumber.toLocaleString()\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={tokenName} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(\r\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={tokenName} />,\r\n  )\r\n\r\n  const renderStakingButtons = () => {\r\n    return stakedBalance.eq(0) ? (\r\n      <Button\r\n        onClick={onPresentDeposit}\r\n        disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n      >\r\n        {t('Stake LP')}\r\n      </Button>\r\n    ) : (\r\n      <IconButtonWrapper>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n          <MinusIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n        <IconButton variant=\"tertiary\" onClick={onPresentDeposit}>\r\n          <AddIcon color=\"primary\" width=\"14px\" />\r\n        </IconButton>\r\n      </IconButtonWrapper>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={stakedBalance.eq(0) ? 'textDisabled' : 'text'}>{displayBalance()}</Heading>\r\n      {renderStakingButtons()}\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default StakeAction\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { Button, Flex, Heading } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport CardBusdValue from '../../../Home/components/CardBusdValue'\r\n\r\ninterface FarmCardActionsProps {\r\n  earnings?: BigNumber\r\n  pid?: number\r\n  canHarvest?: boolean\r\n}\r\n\r\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid, canHarvest }) => {\r\n  const { account } = useWeb3React()\r\n  const { t } = useTranslation()\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const cakePrice = usePriceCakeBusd()\r\n\r\n  const rawEarningsBalance = account ? getBalanceNumber(earnings) : 0\r\n  const displayBalance = rawEarningsBalance.toLocaleString()\r\n  const earningsBusd = rawEarningsBalance ? new BigNumber(rawEarningsBalance).multipliedBy(cakePrice).toNumber() : 0\r\n  return (\r\n    <Flex mb=\"8px\" justifyContent=\"space-between\" alignItems=\"center\">\r\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\r\n        {displayBalance}\r\n        {earningsBusd > 0 && <CardBusdValue value={earningsBusd} />}\r\n      </Heading>\r\n      <Button\r\n        disabled={rawEarningsBalance === 0 || pendingTx || !canHarvest}\r\n        onClick={async () => {\r\n          setPendingTx(true)\r\n          await onReward()\r\n          setPendingTx(false)\r\n        }}\r\n      >\r\n        {t('Harvest')}\r\n      </Button>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useLocation } from 'react-router-dom'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { Button, Flex, Text } from 'acentswap-uikit3'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useWeb3 from 'hooks/useWeb3'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport StakeAction from './StakeAction'\r\nimport HarvestAction from './HarvestAction'\r\n\r\nconst Action = styled.div`\r\n  padding-top: 16px;\r\n`\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n}\r\n\r\ninterface FarmCardActionsProps {\r\n  farm: FarmWithStakedValue\r\n  provider?: ProviderType\r\n  account?: string\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, account, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { pid, lpAddresses } = farm\r\n  const {\r\n    allowance: allowanceAsString = 0,\r\n    tokenBalance: tokenBalanceAsString = 0,\r\n    stakedBalance: stakedBalanceAsString = 0,\r\n    earnings: earningsAsString = 0,\r\n    canHarvest,\r\n  } = farm.userData || {}\r\n  const allowance = new BigNumber(allowanceAsString)\r\n  const tokenBalance = new BigNumber(tokenBalanceAsString)\r\n  const stakedBalance = new BigNumber(stakedBalanceAsString)\r\n  const earnings = new BigNumber(earningsAsString)\r\n  const lpAddress = getAddress(lpAddresses)\r\n  const lpName = farm.lpSymbol.toUpperCase()\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n  const web3 = useWeb3()\r\n  const location = useLocation()\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  const renderApprovalOrStakeButton = () => {\r\n    return isApproved ? (\r\n      <StakeAction\r\n        stakedBalance={stakedBalance}\r\n        tokenBalance={tokenBalance}\r\n        tokenName={lpName}\r\n        pid={pid}\r\n        addLiquidityUrl={addLiquidityUrl}\r\n      />\r\n    ) : (\r\n      <Button\r\n        mt=\"8px\"\r\n        width=\"100%\"\r\n        disabled={requestedApproval || location.pathname.includes('archived')}\r\n        onClick={handleApprove}\r\n      >\r\n        {t('Approve Contract')}\r\n      </Button>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Action>\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {/* TODO: Is there a way to get a dynamic value here from useFarmFromSymbol? */}\r\n          ACENT\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Earned')}\r\n        </Text>\r\n      </Flex>\r\n      <HarvestAction earnings={earnings} pid={pid} canHarvest={canHarvest} />\r\n      <Flex>\r\n        <Text bold textTransform=\"uppercase\" color=\"secondary\" fontSize=\"12px\" pr=\"3px\">\r\n          {lpName}\r\n        </Text>\r\n        <Text bold textTransform=\"uppercase\" color=\"textSubtle\" fontSize=\"12px\">\r\n          {t('Staked')}\r\n        </Text>\r\n      </Flex>\r\n      {!account ? <UnlockButton mt=\"8px\" width=\"100%\" /> : renderApprovalOrStakeButton()}\r\n    </Action>\r\n  )\r\n}\r\n\r\nexport default CardActions\r\n","import React from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport { IconButton, useModal, CalculateIcon } from 'acentswap-uikit3'\r\nimport ApyCalculatorModal from 'components/ApyCalculatorModal'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nexport interface ApyButtonProps {\r\n  lpLabel?: string\r\n  cakePrice?: BigNumber\r\n  apr?: number\r\n  addLiquidityUrl?: string\r\n}\r\n\r\nconst ApyButton: React.FC<ApyButtonProps> = ({ lpLabel, cakePrice, apr, addLiquidityUrl }) => {\r\n  const { t } = useTranslation()\r\n  const [onPresentApyModal] = useModal(\r\n    <ApyCalculatorModal\r\n      linkLabel={`${t('Get')} ${lpLabel}`}\r\n      tokenPrice={cakePrice.toNumber()}\r\n      apr={apr}\r\n      linkHref={addLiquidityUrl}\r\n    />,\r\n  )\r\n\r\n  const handleClickButton = (event): void => {\r\n    event.stopPropagation()\r\n    onPresentApyModal()\r\n  }\r\n\r\n  return (\r\n    <IconButton onClick={handleClickButton} variant=\"text\" scale=\"sm\" ml=\"4px\">\r\n      <CalculateIcon width=\"18px\" />\r\n    </IconButton>\r\n  )\r\n}\r\n\r\nexport default ApyButton\r\n","import React, { useState } from 'react'\r\nimport BigNumber from 'bignumber.js'\r\nimport styled, { keyframes } from 'styled-components'\r\nimport { Flex, Text, Skeleton } from 'acentswap-uikit3'\r\nimport { Farm } from 'state/types'\r\nimport { provider as ProviderType } from 'web3-core'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport DetailsSection from './DetailsSection'\r\nimport CardHeading from './CardHeading'\r\nimport CardActionsContainer from './CardActionsContainer'\r\nimport ApyButton from './ApyButton'\r\n\r\nexport interface FarmWithStakedValue extends Farm {\r\n  apr?: number\r\n  liquidity?: BigNumber\r\n}\r\n\r\nconst RainbowLight = keyframes`\r\n\t0% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n\t50% {\r\n\t\tbackground-position: 100% 50%;\r\n\t}\r\n\t100% {\r\n\t\tbackground-position: 0% 50%;\r\n\t}\r\n`\r\n\r\nconst StyledCardAccent = styled.div`\r\n  background: linear-gradient(\r\n    45deg,\r\n    rgba(255, 0, 0, 1) 0%,\r\n    rgba(255, 154, 0, 1) 10%,\r\n    rgba(208, 222, 33, 1) 20%,\r\n    rgba(79, 220, 74, 1) 30%,\r\n    rgba(63, 218, 216, 1) 40%,\r\n    rgba(47, 201, 226, 1) 50%,\r\n    rgba(28, 127, 238, 1) 60%,\r\n    rgba(95, 21, 242, 1) 70%,\r\n    rgba(186, 12, 248, 1) 80%,\r\n    rgba(251, 7, 217, 1) 90%,\r\n    rgba(255, 0, 0, 1) 100%\r\n  );\r\n  background-size: 300% 300%;\r\n  animation: ${RainbowLight} 2s linear infinite;\r\n  border-radius: 32px;\r\n  filter: blur(6px);\r\n  position: absolute;\r\n  top: -2px;\r\n  right: -2px;\r\n  bottom: -2px;\r\n  left: -2px;\r\n  z-index: -1;\r\n`\r\n\r\nconst FCard = styled.div`\r\n  align-self: baseline;\r\n  background: ${(props) => props.theme.card.background};\r\n  border-radius: 32px;\r\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n  padding: 24px;\r\n  position: relative;\r\n  text-align: center;\r\n`\r\n\r\nconst Divider = styled.div`\r\n  background-color: ${({ theme }) => theme.colors.borderColor};\r\n  height: 1px;\r\n  margin: 28px auto;\r\n  width: 100%;\r\n`\r\n\r\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\r\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\r\n  overflow: hidden;\r\n`\r\n\r\ninterface FarmCardProps {\r\n  farm: FarmWithStakedValue\r\n  removed: boolean\r\n  cakePrice?: BigNumber\r\n  provider?: ProviderType\r\n  account?: string\r\n}\r\n\r\nconst FarmCard: React.FC<FarmCardProps> = ({ farm, removed, cakePrice, account }) => {\r\n  const { t } = useTranslation()\r\n\r\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\r\n\r\n  // We assume the token name is coin pair + lp e.g. ACENT-BNB LP, LINK-BNB LP,\r\n  // NAR-ACENT LP. The images should be cake-bnb.svg, link-bnb.svg, nar-cake.svg\r\n  const farmImage = farm.lpSymbol.split(' ')[0].toLocaleLowerCase()\r\n\r\n  const totalValueFormatted = farm.liquidity\r\n    ? `$${farm.liquidity.toNumber().toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n    : '-'\r\n\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const earnLabel = farm.dual ? farm.dual.earnLabel : 'ACENT'\r\n\r\n  const farmAPR = farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 })\r\n  const depositFee = farm.depositFeeBP || 0\r\n\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: farm.quoteToken.address,\r\n    tokenAddress: farm.token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n\r\n  return (\r\n    <FCard>\r\n      {farm.token.symbol === 'ACENT' && <StyledCardAccent />}\r\n      <CardHeading\r\n        lpLabel={lpLabel}\r\n        multiplier={farm.multiplier}\r\n        isCommunityFarm={farm.isCommunity}\r\n        farmImage={farmImage}\r\n        tokenSymbol={farm.token.symbol}\r\n      />\r\n      {!removed && (\r\n        <Flex justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Text>{t('APR')}:</Text>\r\n          <Text bold style={{ display: 'flex', alignItems: 'center' }}>\r\n            {farm.apr ? (\r\n              <>\r\n                <ApyButton lpLabel={lpLabel} addLiquidityUrl={addLiquidityUrl} cakePrice={cakePrice} apr={farm.apr} />\r\n                {farmAPR}%\r\n              </>\r\n            ) : (\r\n              <Skeleton height={24} width={80} />\r\n            )}\r\n          </Text>\r\n        </Flex>\r\n      )}\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Earn')}:</Text>\r\n        <Text bold>{earnLabel}</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Deposit Fee')}:</Text>\r\n        <Text bold>{depositFee}%</Text>\r\n      </Flex>\r\n      <Flex justifyContent=\"space-between\">\r\n        <Text>{t('Harvest Lockup')}:</Text>\r\n        <Text bold>{farm.harvestInterval} Hour(s)</Text>\r\n      </Flex>\r\n      <CardActionsContainer farm={farm} account={account} addLiquidityUrl={addLiquidityUrl} />\r\n      <Divider />\r\n      <ExpandableSectionButton\r\n        onClick={() => setShowExpandableSection(!showExpandableSection)}\r\n        expanded={showExpandableSection}\r\n      />\r\n      <ExpandingWrapper expanded={showExpandableSection}>\r\n        <DetailsSection\r\n          removed={removed}\r\n          bscScanAddress={`https://bscscan.com/address/${farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]}`}\r\n          infoAddress={`https://acentswap.info/pair/${lpAddress}`}\r\n          totalValueFormatted={totalValueFormatted}\r\n          lpLabel={lpLabel}\r\n          addLiquidityUrl={addLiquidityUrl}\r\n        />\r\n      </ExpandingWrapper>\r\n    </FCard>\r\n  )\r\n}\r\n\r\nexport default FarmCard\r\n","import { useState, useEffect } from 'react'\r\n\r\n/**\r\n * Use this hook when you want to animate something when it appears on the screen (e.g. when some prop set to true)\r\n * but when its not on the screen you want it to be fully unmounted and not just hidden or height 0.\r\n * This is especially useful when you have a table of 100s rows and each row has expandable element that appears on click.\r\n * If you just set the expanding animation while keeping inactive elements mounted all those 100 elements will load the DOM,\r\n * and if they all receive updates via props you're looking at 100 DOM updates for hidden elements.\r\n * This hook \"shows\" element immediately when the isMounted is true\r\n * but keeps element mounted for delayTime to let unmounting animation happen, after which you unmount element completely.\r\n * delayTime should be the same as animation time in most cases.\r\n */\r\nconst useDelayedUnmount = (isMounted: boolean, delayTime: number) => {\r\n  const [shouldRender, setShouldRender] = useState(false)\r\n\r\n  useEffect(() => {\r\n    let timeoutId: ReturnType<typeof setTimeout>\r\n    if (isMounted && !shouldRender) {\r\n      setShouldRender(true)\r\n    } else if (!isMounted && shouldRender) {\r\n      timeoutId = setTimeout(() => setShouldRender(false), delayTime)\r\n    }\r\n    return () => clearTimeout(timeoutId)\r\n  }, [isMounted, delayTime, shouldRender])\r\n  return shouldRender\r\n}\r\n\r\nexport default useDelayedUnmount\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport ApyButton from 'views/Farms/components/FarmCard/ApyButton'\r\nimport { Address } from 'config/constants/types'\r\nimport BigNumber from 'bignumber.js'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { Skeleton } from 'acentswap-uikit3'\r\n\r\nexport interface AprProps {\r\n  value: string\r\n  multiplier: string\r\n  lpLabel: string\r\n  tokenAddress?: Address\r\n  quoteTokenAddress?: Address\r\n  cakePrice: BigNumber\r\n  originalValue: number\r\n  hideButton?: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.colors.text};\r\n\r\n  button {\r\n    width: 20px;\r\n    height: 20px;\r\n\r\n    svg {\r\n      path {\r\n        fill: ${({ theme }) => theme.colors.textSubtle};\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nconst AprWrapper = styled.div`\r\n  min-width: 60px;\r\n  text-align: left;\r\n`\r\n\r\nconst Apr: React.FC<AprProps> = ({\r\n  value,\r\n  lpLabel,\r\n  tokenAddress,\r\n  quoteTokenAddress,\r\n  cakePrice,\r\n  originalValue,\r\n  hideButton = false,\r\n}) => {\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({ quoteTokenAddress, tokenAddress })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  return originalValue !== 0 ? (\r\n    <Container>\r\n      {originalValue ? (\r\n        <>\r\n          <AprWrapper>{value}%</AprWrapper>\r\n          {!hideButton && (\r\n            <ApyButton lpLabel={lpLabel} cakePrice={cakePrice} apr={originalValue} addLiquidityUrl={addLiquidityUrl} />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <AprWrapper>\r\n          <Skeleton width={60} />\r\n        </AprWrapper>\r\n      )}\r\n    </Container>\r\n  ) : (\r\n    <Container>\r\n      <AprWrapper>{originalValue}%</AprWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Apr\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { Text, Image } from 'acentswap-uikit3'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\n\r\nexport interface FarmProps {\r\n  label: string\r\n  pid: number\r\n  image: string\r\n}\r\n\r\nconst IconImage = styled(Image)`\r\n  width: 24px;\r\n  height: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  padding-left: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-left: 32px;\r\n  }\r\n`\r\n\r\nconst Farm: React.FunctionComponent<FarmProps> = ({ image, label, pid }) => {\r\n  const { stakedBalance } = useFarmUser(pid)\r\n  const { t } = useTranslation()\r\n  const rawStakedBalance = getBalanceNumber(stakedBalance)\r\n\r\n  const handleRenderFarming = (): JSX.Element => {\r\n    if (rawStakedBalance) {\r\n      return (\r\n        <Text color=\"secondary\" fontSize=\"12px\" bold>\r\n          {t('FARMING')}\r\n        </Text>\r\n      )\r\n    }\r\n\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconImage src={`/images/farms/${image}.png`} alt=\"icon\" width={40} height={40} mr=\"8px\" />\r\n      <div>\r\n        {handleRenderFarming()}\r\n        <Text bold>{label}</Text>\r\n      </div>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Farm\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Skeleton } from 'acentswap-uikit3'\r\n\r\nexport interface EarnedProps {\r\n  earnings: number\r\n  pid: number\r\n}\r\n\r\ninterface EarnedPropsWithLoading extends EarnedProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Amount = styled.span<{ earned: number }>`\r\n  color: ${({ earned, theme }) => (earned ? theme.colors.text : theme.colors.textDisabled)};\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Earned: React.FunctionComponent<EarnedPropsWithLoading> = ({ earnings, userDataReady }) => {\r\n  if (userDataReady) {\r\n    return <Amount earned={earnings}>{earnings.toLocaleString()}</Amount>\r\n  }\r\n  return (\r\n    <Amount earned={0}>\r\n      <Skeleton width={60} />\r\n    </Amount>\r\n  )\r\n}\r\n\r\nexport default Earned\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChevronDownIcon, useMatchBreakpoints } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface DetailsProps {\r\n  actionPanelToggled: boolean\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: flex-end;\r\n  padding-right: 8px;\r\n  color: ${({ theme }) => theme.colors.primary};\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    padding-right: 0px;\r\n  }\r\n`\r\n\r\nconst ArrowIcon = styled(ChevronDownIcon)<{ toggled: boolean }>`\r\n  transform: ${({ toggled }) => (toggled ? 'rotate(180deg)' : 'rotate(0)')};\r\n  height: 20px;\r\n`\r\n\r\nconst Details: React.FC<DetailsProps> = ({ actionPanelToggled }) => {\r\n  const { t } = useTranslation()\r\n  const { isXl } = useMatchBreakpoints()\r\n  const isMobile = !isXl\r\n\r\n  return (\r\n    <Container>\r\n      {!isMobile && t('Details')}\r\n      <ArrowIcon color=\"primary\" toggled={actionPanelToggled} />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Details\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Skeleton, useTooltip } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface MultiplierProps {\r\n  multiplier: string\r\n}\r\n\r\nconst MultiplierWrapper = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  width: 36px;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Multiplier: React.FunctionComponent<MultiplierProps> = ({ multiplier }) => {\r\n  const displayMultiplier = multiplier ? multiplier.toLowerCase() : <Skeleton width={30} />\r\n  const { t } = useTranslation()\r\n  const tooltipContent = (\r\n    <div>\r\n      {t('The multiplier represents the amount of ACENT rewards each farm gets.')}\r\n      <br />\r\n      <br />\r\n      {t('For example, if a 1x farm was getting 1 ACENT per block, a 40x farm would be getting 40 ACENT per block.')}\r\n    </div>\r\n  )\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(tooltipContent, {\r\n    placement: 'top-end',\r\n    tooltipOffset: [20, 10],\r\n  })\r\n\r\n  return (\r\n    <Container>\r\n      <MultiplierWrapper>{displayMultiplier}</MultiplierWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Multiplier\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { HelpIcon, Text, Skeleton, useTooltip } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport BigNumber from 'bignumber.js'\r\n\r\nconst ReferenceElement = styled.div`\r\n  display: inline-block;\r\n`\r\n\r\nexport interface LiquidityProps {\r\n  liquidity: BigNumber\r\n}\r\n\r\nconst LiquidityWrapper = styled.div`\r\n  min-width: 110px;\r\n  font-weight: 600;\r\n  text-align: right;\r\n  margin-right: 14px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    text-align: left;\r\n    margin-right: 0;\r\n  }\r\n`\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\nconst Liquidity: React.FunctionComponent<LiquidityProps> = ({ liquidity }) => {\r\n  const displayLiquidity = liquidity ? (\r\n    `$${Number(liquidity).toLocaleString(undefined, { maximumFractionDigits: 0 })}`\r\n  ) : (\r\n    <Skeleton width={60} />\r\n  )\r\n  const { t } = useTranslation()\r\n  const { targetRef, tooltip, tooltipVisible } = useTooltip(\r\n    t('The total value of the funds in this farm’s liquidity pool'),\r\n    { placement: 'top-end', tooltipOffset: [20, 10] },\r\n  )\r\n\r\n  return (\r\n    <Container>\r\n      <LiquidityWrapper>\r\n        <Text>{displayLiquidity}</Text>\r\n      </LiquidityWrapper>\r\n      <ReferenceElement ref={targetRef}>\r\n        <HelpIcon color=\"textSubtle\" />\r\n      </ReferenceElement>\r\n      {tooltipVisible && tooltip}\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Liquidity\r\n","import styled from 'styled-components'\r\n\r\nexport const ActionContainer = styled.div`\r\n  padding: 16px;\r\n  border: 2px solid ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  flex-grow: 1;\r\n  flex-basis: 0;\r\n  margin-bottom: 16px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 12px;\r\n    margin-right: 12px;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    margin-left: 48px;\r\n    margin-right: 0;\r\n    margin-bottom: 0;\r\n    max-height: 100px;\r\n  }\r\n`\r\n\r\nexport const ActionTitles = styled.div`\r\n  font-weight: 600;\r\n  font-size: 12px;\r\n  margin-bottom: 8px;\r\n`\r\n\r\nexport const Title = styled.span`\r\n  color: ${({ theme }) => theme.colors.secondary};\r\n`\r\n\r\nexport const Subtle = styled.span`\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n\r\nexport const ActionContent = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`\r\nexport const Earned = styled.div`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  color: ${({ theme }) => theme.colors.text};\r\n`\r\n\r\nexport const Staked = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n`\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { Button, Skeleton } from 'acentswap-uikit3'\r\nimport BigNumber from 'bignumber.js'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { useHarvest } from 'hooks/useHarvest'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { usePriceCakeBusd } from 'state/hooks'\r\nimport { useCountUp } from 'react-countup'\r\n\r\nimport { ActionContainer, ActionTitles, Title, Subtle, ActionContent, Earned, Staked } from './styles'\r\n\r\ninterface HarvestActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst HarvestAction: React.FunctionComponent<HarvestActionProps> = ({ pid, userData, userDataReady }) => {\r\n  const earningsBigNumber = new BigNumber(userData.earnings)\r\n  const cakePrice = usePriceCakeBusd()\r\n  let earnings = 0\r\n  let earningsBusd = 0\r\n  let displayBalance = userDataReady ? earnings.toLocaleString() : <Skeleton width={60} />\r\n\r\n  // If user didn't connect wallet default balance will be 0\r\n  if (!earningsBigNumber.isZero()) {\r\n    earnings = getBalanceNumber(earningsBigNumber)\r\n    earningsBusd = new BigNumber(earnings).multipliedBy(cakePrice).toNumber()\r\n    displayBalance = earnings.toLocaleString()\r\n  }\r\n\r\n  const [pendingTx, setPendingTx] = useState(false)\r\n  const { onReward } = useHarvest(pid)\r\n  const { t } = useTranslation()\r\n\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: earningsBusd,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals: 3,\r\n  })\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(earningsBusd)\r\n  }, [earningsBusd, updateValue])\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Title>ACENT </Title>\r\n        <Subtle>{t('EARNED')}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <div>\r\n          <Earned>{displayBalance}</Earned>\r\n          {countUp > 0 && <Staked>~{countUp}USD</Staked>}\r\n        </div>\r\n        <Button\r\n          disabled={!earnings || pendingTx || !userDataReady || !userData.canHarvest}\r\n          onClick={async () => {\r\n            setPendingTx(true)\r\n            await onReward()\r\n            setPendingTx(false)\r\n          }}\r\n          ml=\"4px\"\r\n        >\r\n          {t('Harvest')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default HarvestAction\r\n","import React, { useState, useCallback } from 'react'\r\nimport styled from 'styled-components'\r\nimport { Button, useModal, IconButton, AddIcon, MinusIcon, Skeleton } from 'acentswap-uikit3'\r\nimport { useLocation } from 'react-router-dom'\r\nimport UnlockButton from 'components/UnlockButton'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { useFarmUser } from 'state/hooks'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { useApprove } from 'hooks/useApprove'\r\nimport { getBep20Contract } from 'utils/contractHelpers'\r\nimport { BASE_ADD_LIQUIDITY_URL } from 'config'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { getBalanceNumber, getFullDisplayBalance } from 'utils/formatBalance'\r\nimport useStake from 'hooks/useStake'\r\nimport useUnstake from 'hooks/useUnstake'\r\nimport useWeb3 from 'hooks/useWeb3'\r\n\r\nimport DepositModal from '../../DepositModal'\r\nimport WithdrawModal from '../../WithdrawModal'\r\nimport { ActionContainer, ActionTitles, ActionContent, Earned, Title, Subtle } from './styles'\r\n\r\nconst IconButtonWrapper = styled.div`\r\n  display: flex;\r\n`\r\n\r\ninterface StackedActionProps extends FarmWithStakedValue {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst Staked: React.FunctionComponent<StackedActionProps> = ({\r\n  pid,\r\n  lpSymbol,\r\n  lpAddresses,\r\n  quoteToken,\r\n  token,\r\n  userDataReady,\r\n}) => {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3React()\r\n  const [requestedApproval, setRequestedApproval] = useState(false)\r\n  const { allowance, tokenBalance, stakedBalance } = useFarmUser(pid)\r\n  const { onStake } = useStake(pid)\r\n  const { onUnstake } = useUnstake(pid)\r\n  const web3 = useWeb3()\r\n  const location = useLocation()\r\n\r\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\r\n\r\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const addLiquidityUrl = `${BASE_ADD_LIQUIDITY_URL}/${liquidityUrlPathParts}`\r\n\r\n  const displayBalance = useCallback(() => {\r\n    const stakedBalanceNumber = getBalanceNumber(stakedBalance)\r\n    if (stakedBalanceNumber > 0 && stakedBalanceNumber < 0.0001) {\r\n      return getFullDisplayBalance(stakedBalance).toLocaleString()\r\n    }\r\n    return stakedBalanceNumber.toLocaleString()\r\n  }, [stakedBalance])\r\n\r\n  const [onPresentDeposit] = useModal(\r\n    <DepositModal max={tokenBalance} onConfirm={onStake} tokenName={lpSymbol} addLiquidityUrl={addLiquidityUrl} />,\r\n  )\r\n  const [onPresentWithdraw] = useModal(<WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={lpSymbol} />)\r\n\r\n  const lpContract = getBep20Contract(lpAddress, web3)\r\n\r\n  const { onApprove } = useApprove(lpContract)\r\n\r\n  const handleApprove = useCallback(async () => {\r\n    try {\r\n      setRequestedApproval(true)\r\n      await onApprove()\r\n      setRequestedApproval(false)\r\n    } catch (e) {\r\n      console.error(e)\r\n    }\r\n  }, [onApprove])\r\n\r\n  if (!account) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('START FARMING')}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <UnlockButton width=\"100%\" />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (isApproved) {\r\n    if (stakedBalance.gt(0)) {\r\n      return (\r\n        <ActionContainer>\r\n          <ActionTitles>\r\n            <Title>{lpSymbol} </Title>\r\n            <Subtle>{t('STAKED')}</Subtle>\r\n          </ActionTitles>\r\n          <ActionContent>\r\n            <div>\r\n              <Earned>{displayBalance()}</Earned>\r\n            </div>\r\n            <IconButtonWrapper>\r\n              <IconButton variant=\"secondary\" onClick={onPresentWithdraw} mr=\"6px\">\r\n                <MinusIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n              <IconButton variant=\"secondary\" onClick={onPresentDeposit}>\r\n                <AddIcon color=\"primary\" width=\"14px\" />\r\n              </IconButton>\r\n            </IconButtonWrapper>\r\n          </ActionContent>\r\n        </ActionContainer>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('STAKE')} </Subtle>\r\n          <Title>{lpSymbol}</Title>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Button\r\n            width=\"100%\"\r\n            onClick={onPresentDeposit}\r\n            variant=\"secondary\"\r\n            disabled={['history', 'archived'].some((item) => location.pathname.includes(item))}\r\n          >\r\n            {t('Stake LP')}\r\n          </Button>\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  if (!userDataReady) {\r\n    return (\r\n      <ActionContainer>\r\n        <ActionTitles>\r\n          <Subtle>{t('START FARMING')}</Subtle>\r\n        </ActionTitles>\r\n        <ActionContent>\r\n          <Skeleton width={180} marginBottom={28} marginTop={14} />\r\n        </ActionContent>\r\n      </ActionContainer>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <ActionContainer>\r\n      <ActionTitles>\r\n        <Subtle>{t('ENABLE FARM')}</Subtle>\r\n      </ActionTitles>\r\n      <ActionContent>\r\n        <Button\r\n          width=\"100%\"\r\n          disabled={requestedApproval || location.pathname.includes('archived')}\r\n          onClick={handleApprove}\r\n          variant=\"secondary\"\r\n        >\r\n          {t('Enable')}\r\n        </Button>\r\n      </ActionContent>\r\n    </ActionContainer>\r\n  )\r\n}\r\n\r\nexport default Staked\r\n","import React from 'react'\r\nimport styled, { keyframes, css } from 'styled-components'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { LinkExternal, Text } from 'acentswap-uikit3'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport getLiquidityUrlPathParts from 'utils/getLiquidityUrlPathParts'\r\nimport { CommunityTag, CoreTag, DualTag } from 'components/Tags'\r\n\r\nimport HarvestAction from './HarvestAction'\r\nimport StakedAction from './StakedAction'\r\nimport Apr, { AprProps } from '../Apr'\r\nimport Multiplier, { MultiplierProps } from '../Multiplier'\r\nimport Liquidity, { LiquidityProps } from '../Liquidity'\r\n\r\nexport interface ActionPanelProps {\r\n  apr: AprProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n  userDataReady: boolean\r\n  expanded: boolean\r\n}\r\n\r\nconst expandAnimation = keyframes`\r\n  from {\r\n    max-height: 0px;\r\n  }\r\n  to {\r\n    max-height: 500px;\r\n  }\r\n`\r\n\r\nconst collapseAnimation = keyframes`\r\n  from {\r\n    max-height: 500px;\r\n  }\r\n  to {\r\n    max-height: 0px;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ expanded }>`\r\n  animation: ${({ expanded }) =>\r\n    expanded\r\n      ? css`\r\n          ${expandAnimation} 300ms linear forwards\r\n        `\r\n      : css`\r\n          ${collapseAnimation} 300ms linear forwards\r\n        `};\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.background};\r\n  display: flex;\r\n  width: 100%;\r\n  flex-direction: column-reverse;\r\n  padding: 24px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    flex-direction: row;\r\n    padding: 16px 32px;\r\n  }\r\n`\r\n\r\nconst StyledLinkExternal = styled(LinkExternal)`\r\n  font-weight: 400;\r\n`\r\n\r\nconst StakeContainer = styled.div`\r\n  color: ${({ theme }) => theme.colors.text};\r\n  align-items: center;\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n  }\r\n`\r\n\r\nconst TagsContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-top: 25px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-top: 16px;\r\n  }\r\n\r\n  > div {\r\n    height: 24px;\r\n    padding: 0 6px;\r\n    font-size: 14px;\r\n    margin-right: 4px;\r\n\r\n    svg {\r\n      width: 14px;\r\n    }\r\n  }\r\n`\r\n\r\nconst ActionContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    align-items: center;\r\n    flex-grow: 1;\r\n    flex-basis: 0;\r\n  }\r\n`\r\n\r\nconst InfoContainer = styled.div`\r\n  min-width: 200px;\r\n`\r\n\r\nconst ValueContainer = styled.div`\r\n  display: block;\r\n\r\n  ${({ theme }) => theme.mediaQueries.lg} {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst ValueWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  margin: 4px 0px;\r\n`\r\n\r\nconst ActionPanel: React.FunctionComponent<ActionPanelProps> = ({\r\n  details,\r\n  apr,\r\n  multiplier,\r\n  liquidity,\r\n  userDataReady,\r\n  expanded,\r\n}) => {\r\n  const farm = details\r\n\r\n  const { t } = useTranslation()\r\n  const isActive = farm.multiplier !== '0X'\r\n  const { quoteToken, token, dual } = farm\r\n  const lpLabel = farm.lpSymbol && farm.lpSymbol.toUpperCase().replace('PANCAKE', '')\r\n  const liquidityUrlPathParts = getLiquidityUrlPathParts({\r\n    quoteTokenAddress: quoteToken.address,\r\n    tokenAddress: token.address,\r\n  })\r\n  const lpAddress = farm.lpAddresses[process.env.REACT_APP_CHAIN_ID]\r\n  const bsc = `https://bscscan.com/address/${lpAddress}`\r\n  const info = `https://acentswap.info/pair/${lpAddress}`\r\n\r\n  return (\r\n    <Container expanded={expanded}>\r\n      <InfoContainer>\r\n        {isActive && (\r\n          <StakeContainer>\r\n            <StyledLinkExternal href={`https://exchange.acentswap.com/#/add/${liquidityUrlPathParts}`}>\r\n              {t(`Get ${lpLabel}`, { name: lpLabel })}\r\n            </StyledLinkExternal>\r\n          </StakeContainer>\r\n        )}\r\n        <StyledLinkExternal href={bsc}>{t('View Contract')}</StyledLinkExternal>\r\n        <StyledLinkExternal href={info}>{t('See Pair Info')}</StyledLinkExternal>\r\n        <TagsContainer>\r\n          {farm.isCommunity ? <CommunityTag /> : <CoreTag />}\r\n          {dual ? <DualTag /> : null}\r\n        </TagsContainer>\r\n      </InfoContainer>\r\n      <ValueContainer>\r\n        <ValueWrapper>\r\n          <Text>{t('APR')}</Text>\r\n          <Apr {...apr} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Multiplier')}</Text>\r\n          <Multiplier {...multiplier} />\r\n        </ValueWrapper>\r\n        <ValueWrapper>\r\n          <Text>{t('Liquidity')}</Text>\r\n          <Liquidity {...liquidity} />\r\n        </ValueWrapper>\r\n      </ValueContainer>\r\n      <ActionContainer>\r\n        <HarvestAction {...farm} userDataReady={userDataReady} />\r\n        <StakedAction {...farm} userDataReady={userDataReady} />\r\n      </ActionContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ActionPanel\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst Label = styled.div`\r\n  font-size: 12px;\r\n  color: ${({ theme }) => theme.colors.textSubtle};\r\n  text-align: left;\r\n`\r\n\r\nconst ContentContainer = styled.div`\r\n  min-height: 24px;\r\n  display: flex;\r\n  align-items: center;\r\n`\r\n\r\ninterface CellLayoutProps {\r\n  label?: string\r\n}\r\n\r\nconst CellLayout: React.FC<CellLayoutProps> = ({ label = '', children }) => {\r\n  return (\r\n    <div>\r\n      {label && <Label>{label}</Label>}\r\n      <ContentContainer>{children}</ContentContainer>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CellLayout\r\n","import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { FarmWithStakedValue } from 'views/Farms/components/FarmCard/FarmCard'\r\nimport { useMatchBreakpoints } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport useDelayedUnmount from 'hooks/useDelayedUnmount'\r\nimport { useFarmUser } from 'state/hooks'\r\n\r\nimport Apr, { AprProps } from './Apr'\r\nimport Farm, { FarmProps } from './Farm'\r\nimport Earned, { EarnedProps } from './Earned'\r\nimport Details from './Details'\r\nimport Multiplier, { MultiplierProps } from './Multiplier'\r\nimport Liquidity, { LiquidityProps } from './Liquidity'\r\nimport ActionPanel from './Actions/ActionPanel'\r\nimport CellLayout from './CellLayout'\r\nimport { DesktopColumnSchema, MobileColumnSchema } from '../types'\r\n\r\nexport interface RowProps {\r\n  apr: AprProps\r\n  farm: FarmProps\r\n  earned: EarnedProps\r\n  multiplier: MultiplierProps\r\n  liquidity: LiquidityProps\r\n  details: FarmWithStakedValue\r\n}\r\n\r\ninterface RowPropsWithLoading extends RowProps {\r\n  userDataReady: boolean\r\n}\r\n\r\nconst cells = {\r\n  apr: Apr,\r\n  farm: Farm,\r\n  earned: Earned,\r\n  details: Details,\r\n  multiplier: Multiplier,\r\n  liquidity: Liquidity,\r\n}\r\n\r\nconst CellInner = styled.div`\r\n  padding: 24px 0px;\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  padding-right: 8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.xl} {\r\n    padding-right: 32px;\r\n  }\r\n`\r\n\r\nconst StyledTr = styled.tr`\r\n  cursor: pointer;\r\n  border-bottom: 2px solid ${({ theme }) => theme.colors.borderColor};\r\n`\r\n\r\nconst EarnedMobileCell = styled.td`\r\n  padding: 16px 0 24px 16px;\r\n`\r\n\r\nconst AprMobileCell = styled.td`\r\n  padding-top: 16px;\r\n  padding-bottom: 24px;\r\n`\r\n\r\nconst FarmMobileCell = styled.td`\r\n  padding-top: 24px;\r\n`\r\n\r\nconst Row: React.FunctionComponent<RowPropsWithLoading> = (props) => {\r\n  const { details, userDataReady } = props\r\n  const hasStakedAmount = !!useFarmUser(details.pid).stakedBalance.toNumber()\r\n  const [actionPanelExpanded, setActionPanelExpanded] = useState(hasStakedAmount)\r\n  const shouldRenderChild = useDelayedUnmount(actionPanelExpanded, 300)\r\n  const { t } = useTranslation()\r\n\r\n  const toggleActionPanel = () => {\r\n    setActionPanelExpanded(!actionPanelExpanded)\r\n  }\r\n\r\n  useEffect(() => {\r\n    setActionPanelExpanded(hasStakedAmount)\r\n  }, [hasStakedAmount])\r\n\r\n  const { isXl, isXs } = useMatchBreakpoints()\r\n\r\n  const isMobile = !isXl\r\n  const tableSchema = isMobile ? MobileColumnSchema : DesktopColumnSchema\r\n  const columnNames = tableSchema.map((column) => column.name)\r\n\r\n  const handleRenderRow = () => {\r\n    if (!isXs) {\r\n      return (\r\n        <StyledTr onClick={toggleActionPanel}>\r\n          {Object.keys(props).map((key) => {\r\n            const columnIndex = columnNames.indexOf(key)\r\n            if (columnIndex === -1) {\r\n              return null\r\n            }\r\n\r\n            switch (key) {\r\n              case 'details':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout>\r\n                        <Details actionPanelToggled={actionPanelExpanded} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              case 'apr':\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t('APR')}>\r\n                        <Apr {...props.apr} hideButton={isMobile} />\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n              default:\r\n                return (\r\n                  <td key={key}>\r\n                    <CellInner>\r\n                      <CellLayout label={t(tableSchema[columnIndex].label)}>\r\n                        {React.createElement(cells[key], { ...props[key], userDataReady })}\r\n                      </CellLayout>\r\n                    </CellInner>\r\n                  </td>\r\n                )\r\n            }\r\n          })}\r\n        </StyledTr>\r\n      )\r\n    }\r\n\r\n    return (\r\n      <StyledTr onClick={toggleActionPanel}>\r\n        <td>\r\n          <tr>\r\n            <FarmMobileCell>\r\n              <CellLayout>\r\n                <Farm {...props.farm} />\r\n              </CellLayout>\r\n            </FarmMobileCell>\r\n          </tr>\r\n          <tr>\r\n            <EarnedMobileCell>\r\n              <CellLayout label={t('Earned')}>\r\n                <Earned {...props.earned} userDataReady={userDataReady} />\r\n              </CellLayout>\r\n            </EarnedMobileCell>\r\n            <AprMobileCell>\r\n              <CellLayout label={t('APR')}>\r\n                <Apr {...props.apr} hideButton />\r\n              </CellLayout>\r\n            </AprMobileCell>\r\n          </tr>\r\n        </td>\r\n        <td>\r\n          <CellInner>\r\n            <CellLayout>\r\n              <Details actionPanelToggled={actionPanelExpanded} />\r\n            </CellLayout>\r\n          </CellInner>\r\n        </td>\r\n      </StyledTr>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {handleRenderRow()}\r\n      {shouldRenderChild && (\r\n        <tr>\r\n          <td colSpan={6}>\r\n            <ActionPanel {...props} expanded={actionPanelExpanded} />\r\n          </td>\r\n        </tr>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Row\r\n","import React, { useRef } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTable, Button, ChevronUpIcon, ColumnType } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\nimport Row, { RowProps } from './Row'\r\n\r\nexport interface ITableProps {\r\n  data: RowProps[]\r\n  columns: ColumnType<RowProps>[]\r\n  userDataReady: boolean\r\n  sortColumn?: string\r\n}\r\n\r\nconst Container = styled.div`\r\n  filter: ${({ theme }) => theme.card.dropShadow};\r\n  width: 100%;\r\n  background: ${({ theme }) => theme.card.background};\r\n  border-radius: 16px;\r\n  margin: 16px 0px;\r\n`\r\n\r\nconst TableWrapper = styled.div`\r\n  overflow: visible;\r\n\r\n  &::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`\r\n\r\nconst StyledTable = styled.table`\r\n  border-collapse: collapse;\r\n  font-size: 14px;\r\n  border-radius: 4px;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  width: 100%;\r\n`\r\n\r\nconst TableBody = styled.tbody`\r\n  & tr {\r\n    td {\r\n      font-size: 16px;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n`\r\n\r\nconst TableContainer = styled.div`\r\n  position: relative;\r\n`\r\n\r\nconst ScrollButtonContainer = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding-top: 5px;\r\n  padding-bottom: 5px;\r\n`\r\n\r\nconst FarmTable: React.FC<ITableProps> = (props) => {\r\n  const tableWrapperEl = useRef<HTMLDivElement>(null)\r\n  const { t } = useTranslation()\r\n  const { data, columns, userDataReady } = props\r\n\r\n  const { rows } = useTable(columns, data, { sortable: true, sortColumn: 'farm' })\r\n\r\n  const scrollToTop = (): void => {\r\n    tableWrapperEl.current.scrollIntoView({\r\n      behavior: 'smooth',\r\n    })\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <TableContainer>\r\n        <TableWrapper ref={tableWrapperEl}>\r\n          <StyledTable>\r\n            <TableBody>\r\n              {rows.map((row) => {\r\n                return <Row {...row.original} userDataReady={userDataReady} key={`table-row-${row.id}`} />\r\n              })}\r\n            </TableBody>\r\n          </StyledTable>\r\n        </TableWrapper>\r\n        <ScrollButtonContainer>\r\n          <Button variant=\"text\" onClick={scrollToTop}>\r\n            {t('To Top')}\r\n            <ChevronUpIcon color=\"primary\" />\r\n          </Button>\r\n        </ScrollButtonContainer>\r\n      </TableContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default FarmTable\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { useLocation, Link, useRouteMatch } from 'react-router-dom'\r\nimport { ButtonMenu, ButtonMenuItem, NotificationDot } from 'acentswap-uikit3'\r\nimport { useTranslation } from 'contexts/Localization'\r\n\r\ninterface FarmTabButtonsProps {\r\n  hasStakeInFinishedFarms: boolean\r\n}\r\n\r\nconst FarmTabButtons: React.FC<FarmTabButtonsProps> = ({ hasStakeInFinishedFarms }) => {\r\n  const { url } = useRouteMatch()\r\n  const location = useLocation()\r\n  const { t } = useTranslation()\r\n\r\n  let activeIndex\r\n  switch (location.pathname) {\r\n    case '/farms':\r\n      activeIndex = 0\r\n      break\r\n    case '/farms/history':\r\n      activeIndex = 1\r\n      break\r\n    case '/farms/archived':\r\n      activeIndex = 2\r\n      break\r\n    default:\r\n      activeIndex = 0\r\n      break\r\n  }\r\n\r\n  return (\r\n    <Wrapper>\r\n      <ButtonMenu activeIndex={activeIndex} scale=\"sm\" variant=\"subtle\">\r\n        <ButtonMenuItem as={Link} to={`${url}`}>\r\n          {t('Live')}\r\n        </ButtonMenuItem>\r\n        <NotificationDot show={hasStakeInFinishedFarms}>\r\n          <ButtonMenuItem as={Link} to={`${url}/history`}>\r\n            {t('Finished')}\r\n          </ButtonMenuItem>\r\n        </NotificationDot>\r\n      </ButtonMenu>\r\n    </Wrapper>\r\n  )\r\n}\r\n\r\nexport default FarmTabButtons\r\n\r\nconst Wrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  a {\r\n    padding-left: 12px;\r\n    padding-right: 12px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 16px;\r\n  }\r\n`\r\n","import React, { useState, useMemo } from 'react'\r\nimport { Input } from 'acentswap-uikit3'\r\nimport styled from 'styled-components'\r\nimport debounce from 'lodash/debounce'\r\n\r\nconst StyledInput = styled(Input)`\r\n  border-radius: 16px;\r\n  margin-left: auto;\r\n`\r\n\r\nconst InputWrapper = styled.div`\r\n  position: relative;\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: 234px;\r\n    display: block;\r\n  }\r\n`\r\n\r\nconst Container = styled.div<{ toggled: boolean }>``\r\n\r\ninterface Props {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void\r\n}\r\n\r\nconst SearchInput: React.FC<Props> = ({ onChange: onChangeCallback }) => {\r\n  const [toggled, setToggled] = useState(false)\r\n  const [searchText, setSearchText] = useState('')\r\n\r\n  const debouncedOnChange = useMemo(\r\n    () => debounce((e: React.ChangeEvent<HTMLInputElement>) => onChangeCallback(e), 500),\r\n    [onChangeCallback],\r\n  )\r\n\r\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchText(e.target.value)\r\n    debouncedOnChange(e)\r\n  }\r\n\r\n  return (\r\n    <Container toggled={toggled}>\r\n      <InputWrapper>\r\n        <StyledInput\r\n          value={searchText}\r\n          onChange={onChange}\r\n          placeholder=\"Search farms\"\r\n          onBlur={() => setToggled(false)}\r\n        />\r\n      </InputWrapper>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default SearchInput\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ListViewIcon, CardViewIcon, IconButton } from 'acentswap-uikit3'\r\nimport { ViewMode } from '../types'\r\n\r\ninterface ToggleViewProps {\r\n  viewMode: ViewMode\r\n  onToggle: (mode: ViewMode) => void\r\n}\r\n\r\nconst Container = styled.div`\r\n  margin-left: -8px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    margin-left: 0;\r\n  }\r\n`\r\n\r\nconst ToggleView: React.FunctionComponent<ToggleViewProps> = ({ viewMode, onToggle }) => {\r\n  const handleToggle = (mode: ViewMode) => {\r\n    if (viewMode !== mode) {\r\n      onToggle(mode)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.CARD)}>\r\n        <CardViewIcon color={viewMode === ViewMode.CARD ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n      <IconButton variant=\"text\" scale=\"sm\" onClick={() => handleToggle(ViewMode.TABLE)}>\r\n        <ListViewIcon color={viewMode === ViewMode.TABLE ? 'primary' : 'textDisabled'} />\r\n      </IconButton>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default ToggleView\r\n","import React, { useEffect, useCallback, useState, useMemo, useRef } from 'react'\r\nimport { Route, useRouteMatch, useLocation } from 'react-router-dom'\r\nimport { useAppDispatch } from 'state'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Heading, RowType, Toggle, Text } from 'acentswap-uikit3'\r\nimport styled from 'styled-components'\r\nimport FlexLayout from 'components/layout/Flex'\r\nimport Page from 'components/layout/Page'\r\nimport { useFarms, usePriceCakeBusd, useGetApiPrices } from 'state/hooks'\r\nimport useRefresh from 'hooks/useRefresh'\r\nimport { fetchFarmUserDataAsync } from 'state/actions'\r\nimport usePersistState from 'hooks/usePersistState'\r\nimport { Farm } from 'state/types'\r\nimport { useTranslation } from 'contexts/Localization'\r\nimport { getBalanceNumber } from 'utils/formatBalance'\r\nimport { getFarmApr } from 'utils/apr'\r\nimport { orderBy } from 'lodash'\r\nimport { getAddress } from 'utils/addressHelpers'\r\nimport isArchivedPid from 'utils/farmHelpers'\r\nimport { latinise } from 'utils/latinise'\r\nimport PageHeader from 'components/PageHeader'\r\nimport { fetchFarmsPublicDataAsync, setLoadArchivedFarmsData } from 'state/farms'\r\nimport Select, { OptionProps } from 'components/Select/Select'\r\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\r\nimport Table from './components/FarmTable/FarmTable'\r\nimport FarmTabButtons from './components/FarmTabButtons'\r\nimport SearchInput from './components/SearchInput'\r\nimport { RowProps } from './components/FarmTable/Row'\r\nimport ToggleView from './components/ToggleView/ToggleView'\r\nimport { DesktopColumnSchema, ViewMode } from './components/types'\r\n\r\nconst ControlContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  align-items: center;\r\n  position: relative;\r\n\r\n  justify-content: space-between;\r\n  flex-direction: column;\r\n  margin-bottom: 32px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    padding: 16px 32px;\r\n    margin-bottom: 0;\r\n  }\r\n`\r\n\r\nconst ToggleWrapper = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 10px;\r\n\r\n  ${Text} {\r\n    margin-left: 8px;\r\n  }\r\n`\r\n\r\nconst LabelWrapper = styled.div`\r\n  > ${Text} {\r\n    font-size: 12px;\r\n  }\r\n`\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  padding: 8px 0px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    width: auto;\r\n    padding: 0;\r\n  }\r\n`\r\n\r\nconst ViewControls = styled.div`\r\n  flex-wrap: wrap;\r\n  justify-content: space-between;\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n\r\n  > div {\r\n    padding: 8px 0px;\r\n  }\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    justify-content: flex-start;\r\n    width: auto;\r\n\r\n    > div {\r\n      padding: 0;\r\n    }\r\n  }\r\n`\r\n\r\nconst NUMBER_OF_FARMS_VISIBLE = 12\r\n\r\nconst Farms: React.FC = () => {\r\n  const { path } = useRouteMatch()\r\n  const { pathname } = useLocation()\r\n  const { t } = useTranslation()\r\n  const { data: farmsLP, userDataLoaded } = useFarms()\r\n  const cakePrice = usePriceCakeBusd()\r\n  const [query, setQuery] = useState('')\r\n  const [viewMode, setViewMode] = usePersistState(ViewMode.TABLE, 'pancake_farm_view')\r\n  const { account } = useWeb3React()\r\n  const [sortOption, setSortOption] = useState('hot')\r\n  const prices = useGetApiPrices()\r\n\r\n  const dispatch = useAppDispatch()\r\n  const { fastRefresh } = useRefresh()\r\n  useEffect(() => {\r\n    if (account) {\r\n      dispatch(fetchFarmUserDataAsync(account))\r\n    }\r\n  }, [account, dispatch, fastRefresh])\r\n\r\n  const isArchived = pathname.includes('archived')\r\n  const isInactive = pathname.includes('history')\r\n  const isActive = !isInactive && !isArchived\r\n  // Users with no wallet connected should see 0 as Earned amount\r\n  // Connected users should see loading indicator until first userData has loaded\r\n  const userDataReady = !account || (!!account && userDataLoaded)\r\n\r\n  const [stakedOnly, setStakedOnly] = useState(!isActive)\r\n  useEffect(() => {\r\n    setStakedOnly(!isActive)\r\n  }, [isActive])\r\n\r\n  useEffect(() => {\r\n    // Makes the main scheduled fetching to request archived farms data\r\n    dispatch(setLoadArchivedFarmsData(isArchived))\r\n    // Immediately request data for archived farms so users don't have to wait\r\n    // 60 seconds for public data and 10 seconds for user data\r\n    if (isArchived) {\r\n      dispatch(fetchFarmsPublicDataAsync())\r\n      if (account) {\r\n        dispatch(fetchFarmUserDataAsync(account))\r\n      }\r\n    }\r\n  }, [isArchived, dispatch, account])\r\n\r\n  const activeFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier !== '0X' && !isArchivedPid(farm.pid))\r\n  const inactiveFarms = farmsLP.filter((farm) => farm.pid !== 0 && farm.multiplier === '0X' && !isArchivedPid(farm.pid))\r\n  const archivedFarms = farmsLP.filter((farm) => isArchivedPid(farm.pid))\r\n\r\n  const stakedOnlyFarms = activeFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedInactiveFarms = inactiveFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const stakedArchivedFarms = archivedFarms.filter(\r\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\r\n  )\r\n\r\n  const farmsList = useCallback(\r\n    (farmsToDisplay: Farm[]): FarmWithStakedValue[] => {\r\n      let farmsToDisplayWithAPR: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\r\n        if (!farm.lpTotalInQuoteToken || !prices) {\r\n          return farm\r\n        }\r\n\r\n        const quoteTokenPriceUsd = prices[getAddress(farm.quoteToken.address).toLowerCase()]\r\n        const totalLiquidity = new BigNumber(farm.lpTotalInQuoteToken).times(quoteTokenPriceUsd)\r\n        const apr = isActive ? getFarmApr(farm.poolWeight, cakePrice, totalLiquidity) : 0\r\n\r\n        return { ...farm, apr, liquidity: totalLiquidity }\r\n      })\r\n\r\n      if (query) {\r\n        const lowercaseQuery = latinise(query.toLowerCase())\r\n        farmsToDisplayWithAPR = farmsToDisplayWithAPR.filter((farm: FarmWithStakedValue) => {\r\n          return latinise(farm.lpSymbol.toLowerCase()).includes(lowercaseQuery)\r\n        })\r\n      }\r\n      return farmsToDisplayWithAPR\r\n    },\r\n    [cakePrice, prices, query, isActive],\r\n  )\r\n\r\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setQuery(event.target.value)\r\n  }\r\n\r\n  const loadMoreRef = useRef<HTMLDivElement>(null)\r\n\r\n  const [numberOfFarmsVisible, setNumberOfFarmsVisible] = useState(NUMBER_OF_FARMS_VISIBLE)\r\n  const [observerIsSet, setObserverIsSet] = useState(false)\r\n\r\n  const farmsStakedMemoized = useMemo(() => {\r\n    let farmsStaked = []\r\n\r\n    const sortFarms = (farms: FarmWithStakedValue[]): FarmWithStakedValue[] => {\r\n      switch (sortOption) {\r\n        case 'apr':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => farm.apr, 'desc')\r\n        case 'multiplier':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.multiplier ? Number(farm.multiplier.slice(0, -1)) : 0),\r\n            'desc',\r\n          )\r\n        case 'earned':\r\n          return orderBy(\r\n            farms,\r\n            (farm: FarmWithStakedValue) => (farm.userData ? Number(farm.userData.earnings) : 0),\r\n            'desc',\r\n          )\r\n        case 'liquidity':\r\n          return orderBy(farms, (farm: FarmWithStakedValue) => Number(farm.liquidity), 'desc')\r\n        default:\r\n          return farms\r\n      }\r\n    }\r\n\r\n    if (isActive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedOnlyFarms) : farmsList(activeFarms)\r\n    }\r\n    if (isInactive) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedInactiveFarms) : farmsList(inactiveFarms)\r\n    }\r\n    if (isArchived) {\r\n      farmsStaked = stakedOnly ? farmsList(stakedArchivedFarms) : farmsList(archivedFarms)\r\n    }\r\n\r\n    return sortFarms(farmsStaked).slice(0, numberOfFarmsVisible)\r\n  }, [\r\n    sortOption,\r\n    activeFarms,\r\n    farmsList,\r\n    inactiveFarms,\r\n    archivedFarms,\r\n    isActive,\r\n    isInactive,\r\n    isArchived,\r\n    stakedArchivedFarms,\r\n    stakedInactiveFarms,\r\n    stakedOnly,\r\n    stakedOnlyFarms,\r\n    numberOfFarmsVisible,\r\n  ])\r\n\r\n  useEffect(() => {\r\n    const showMoreFarms = (entries) => {\r\n      const [entry] = entries\r\n      if (entry.isIntersecting) {\r\n        setNumberOfFarmsVisible((farmsCurrentlyVisible) => farmsCurrentlyVisible + NUMBER_OF_FARMS_VISIBLE)\r\n      }\r\n    }\r\n\r\n    if (!observerIsSet) {\r\n      const loadMoreObserver = new IntersectionObserver(showMoreFarms, {\r\n        rootMargin: '0px',\r\n        threshold: 1,\r\n      })\r\n      loadMoreObserver.observe(loadMoreRef.current)\r\n      setObserverIsSet(true)\r\n    }\r\n  }, [farmsStakedMemoized, observerIsSet])\r\n\r\n  const rowData = farmsStakedMemoized.map((farm) => {\r\n    const { token, quoteToken } = farm\r\n    const tokenAddress = token.address\r\n    const quoteTokenAddress = quoteToken.address\r\n    const lpLabel = farm.lpSymbol && farm.lpSymbol.split(' ')[0].toUpperCase().replace('ACENTSWAP', '')\r\n\r\n    const row: RowProps = {\r\n      apr: {\r\n        value: farm.apr && farm.apr.toLocaleString('en-US', { maximumFractionDigits: 2 }),\r\n        multiplier: farm.multiplier,\r\n        lpLabel,\r\n        tokenAddress,\r\n        quoteTokenAddress,\r\n        cakePrice,\r\n        originalValue: farm.apr,\r\n      },\r\n      farm: {\r\n        image: farm.lpSymbol.split(' ')[0].toLocaleLowerCase(),\r\n        label: lpLabel,\r\n        pid: farm.pid,\r\n      },\r\n      earned: {\r\n        earnings: getBalanceNumber(new BigNumber(farm.userData.earnings)),\r\n        pid: farm.pid,\r\n      },\r\n      liquidity: {\r\n        liquidity: farm.liquidity,\r\n      },\r\n      multiplier: {\r\n        multiplier: farm.multiplier,\r\n      },\r\n      details: farm,\r\n    }\r\n\r\n    return row\r\n  })\r\n\r\n  const renderContent = (): JSX.Element => {\r\n    if (viewMode === ViewMode.TABLE && rowData.length) {\r\n      const columnSchema = DesktopColumnSchema\r\n\r\n      const columns = columnSchema.map((column) => ({\r\n        id: column.id,\r\n        name: column.name,\r\n        label: column.label,\r\n        sort: (a: RowType<RowProps>, b: RowType<RowProps>) => {\r\n          switch (column.name) {\r\n            case 'farm':\r\n              return b.id - a.id\r\n            case 'apr':\r\n              if (a.original.apr.value && b.original.apr.value) {\r\n                return Number(a.original.apr.value) - Number(b.original.apr.value)\r\n              }\r\n\r\n              return 0\r\n            case 'earned':\r\n              return a.original.earned.earnings - b.original.earned.earnings\r\n            default:\r\n              return 1\r\n          }\r\n        },\r\n        sortable: column.sortable,\r\n      }))\r\n\r\n      return <Table data={rowData} columns={columns} userDataReady={userDataReady} />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <FlexLayout>\r\n          <Route exact path={`${path}`}>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed={false} />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/history`}>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\r\n            ))}\r\n          </Route>\r\n          <Route exact path={`${path}/archived`}>\r\n            {farmsStakedMemoized.map((farm) => (\r\n              <FarmCard key={farm.pid} farm={farm} cakePrice={cakePrice} account={account} removed />\r\n            ))}\r\n          </Route>\r\n        </FlexLayout>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  const handleSortOptionChange = (option: OptionProps): void => {\r\n    setSortOption(option.value)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <PageHeader>\r\n        <Heading as=\"h1\" size=\"xxl\" color=\"secondary\" mb=\"24px\">\r\n          {t('Farms')}\r\n        </Heading>\r\n        <Heading size=\"lg\" color=\"text\">\r\n          {t('Stake Liquidity Pool (LP) tokens to earn.')}\r\n        </Heading>\r\n      </PageHeader>\r\n      <Page>\r\n        <ControlContainer>\r\n          <ViewControls>\r\n            <ToggleView viewMode={viewMode} onToggle={(mode: ViewMode) => setViewMode(mode)} />\r\n            <ToggleWrapper>\r\n              <Toggle checked={stakedOnly} onChange={() => setStakedOnly(!stakedOnly)} scale=\"sm\" />\r\n              <Text> {t('Staked only')}</Text>\r\n            </ToggleWrapper>\r\n            <FarmTabButtons hasStakeInFinishedFarms={stakedInactiveFarms.length > 0} />\r\n          </ViewControls>\r\n          <FilterContainer>\r\n            <LabelWrapper>\r\n              <Text>SORT BY</Text>\r\n              <Select\r\n                options={[\r\n                  {\r\n                    label: 'Hot',\r\n                    value: 'hot',\r\n                  },\r\n                  {\r\n                    label: 'APR',\r\n                    value: 'apr',\r\n                  },\r\n                  {\r\n                    label: 'Multiplier',\r\n                    value: 'multiplier',\r\n                  },\r\n                  {\r\n                    label: 'Earned',\r\n                    value: 'earned',\r\n                  },\r\n                  {\r\n                    label: 'Liquidity',\r\n                    value: 'liquidity',\r\n                  },\r\n                ]}\r\n                onChange={handleSortOptionChange}\r\n              />\r\n            </LabelWrapper>\r\n            <LabelWrapper style={{ marginLeft: 16 }}>\r\n              <Text>SEARCH</Text>\r\n              <SearchInput onChange={handleChangeQuery} />\r\n            </LabelWrapper>\r\n          </FilterContainer>\r\n        </ControlContainer>\r\n        {renderContent()}\r\n        <div ref={loadMoreRef} />\r\n        {/* <StyledImage src=\"/images/3dpan.png\" alt=\"Pancake illustration\" width={120} height={103} /> */}\r\n      </Page>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Farms\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useCountUp } from 'react-countup'\r\nimport { Text } from 'acentswap-uikit3'\r\n\r\nexport interface CardValueProps {\r\n  value: number\r\n  decimals?: number\r\n  fontSize?: string\r\n  lineHeight?: string\r\n  prefix?: string\r\n  bold?: boolean\r\n  color?: string\r\n}\r\n\r\nconst CardValue: React.FC<CardValueProps> = ({\r\n  value,\r\n  decimals,\r\n  fontSize = '40px',\r\n  lineHeight = '1',\r\n  prefix = '',\r\n  bold = true,\r\n  color = 'text',\r\n}) => {\r\n  const { countUp, update } = useCountUp({\r\n    start: 0,\r\n    end: value,\r\n    duration: 1,\r\n    separator: ',',\r\n    decimals:\r\n      // eslint-disable-next-line no-nested-ternary\r\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\r\n  })\r\n\r\n  const updateValue = useRef(update)\r\n\r\n  useEffect(() => {\r\n    updateValue.current(value)\r\n  }, [value, updateValue])\r\n\r\n  return (\r\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\r\n      {prefix}\r\n      {countUp}\r\n    </Text>\r\n  )\r\n}\r\n\r\nexport default CardValue\r\n","import React from 'react'\r\nimport CardValue, { CardValueProps } from './CardValue'\r\n\r\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\r\n  return (\r\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\r\n  )\r\n}\r\n\r\nexport default CardBusdValue\r\n","import React, { useContext } from 'react'\r\nimport styled, { ThemeContext } from 'styled-components'\r\n\r\ninterface SpacerProps {\r\n  size?: 'sm' | 'md' | 'lg'\r\n}\r\n\r\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\r\n  const { spacing } = useContext(ThemeContext)\r\n\r\n  let s: number\r\n  switch (size) {\r\n    case 'lg':\r\n      s = spacing[6]\r\n      break\r\n    case 'sm':\r\n      s = spacing[2]\r\n      break\r\n    case 'md':\r\n    default:\r\n      s = spacing[4]\r\n  }\r\n\r\n  return <StyledSpacer size={s} />\r\n}\r\n\r\ninterface StyledSpacerProps {\r\n  size: number\r\n}\r\n\r\nconst StyledSpacer = styled.div<StyledSpacerProps>`\r\n  height: ${(props) => props.size}px;\r\n  width: ${(props) => props.size}px;\r\n`\r\n\r\nexport default Spacer\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport Spacer from '../Spacer'\r\n\r\nconst ModalActions: React.FC = ({ children }) => {\r\n  const l = React.Children.toArray(children).length\r\n  return (\r\n    <StyledModalActions>\r\n      {React.Children.map(children, (child, i) => (\r\n        <>\r\n          <StyledModalAction>{child}</StyledModalAction>\r\n          {i < l - 1 && <Spacer />}\r\n        </>\r\n      ))}\r\n    </StyledModalActions>\r\n  )\r\n}\r\n\r\nconst StyledModalActions = styled.div`\r\n  align-items: center;\r\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\r\n  display: flex;\r\n  margin: 0;\r\n  padding: ${(props) => props.theme.spacing[4]}px 0;\r\n`\r\n\r\nconst StyledModalAction = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nexport default ModalActions\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { ArrowDropDownIcon, Text } from 'acentswap-uikit3'\r\n\r\nconst DropDownHeader = styled.div`\r\n  width: 100%;\r\n  height: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0px 16px;\r\n  box-shadow: ${({ theme }) => theme.shadows.inset};\r\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n  border-radius: 16px;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  transition: border-radius 0.15s;\r\n`\r\n\r\nconst DropDownListContainer = styled.div`\r\n  min-width: 136px;\r\n  height: 0;\r\n  position: absolute;\r\n  overflow: hidden;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n  transition: transform 0.15s, opacity 0.15s;\r\n  transform: scaleY(0);\r\n  transform-origin: top;\r\n  opacity: 0;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n`\r\n\r\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\r\n  cursor: pointer;\r\n  width: ${({ width }) => width}px;\r\n  position: relative;\r\n  background: ${({ theme }) => theme.colors.input};\r\n  border-radius: 16px;\r\n  height: 40px;\r\n  min-width: 136px;\r\n\r\n  ${({ theme }) => theme.mediaQueries.sm} {\r\n    min-width: 168px;\r\n  }\r\n\r\n  ${(props) =>\r\n    props.isOpen &&\r\n    css`\r\n      ${DropDownHeader} {\r\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n        border-radius: 16px 16px 0 0;\r\n      }\r\n\r\n      ${DropDownListContainer} {\r\n        height: auto;\r\n        transform: scaleY(1);\r\n        opacity: 1;\r\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\r\n        border-top-width: 0;\r\n        border-radius: 0 0 16px 16px;\r\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\r\n      }\r\n    `}\r\n\r\n  svg {\r\n    position: absolute;\r\n    right: 16px;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n  }\r\n`\r\n\r\nconst DropDownList = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\r\n`\r\n\r\nconst ListItem = styled.li`\r\n  list-style: none;\r\n  padding: 8px 16px;\r\n  &:hover {\r\n    background: ${({ theme }) => theme.colors.inputSecondary};\r\n  }\r\n`\r\n\r\nexport interface SelectProps {\r\n  options: OptionProps[]\r\n  onChange?: (option: OptionProps) => void\r\n}\r\n\r\nexport interface OptionProps {\r\n  label: string\r\n  value: any\r\n}\r\n\r\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\r\n  const containerRef = useRef(null)\r\n  const dropdownRef = useRef(null)\r\n  const [isOpen, setIsOpen] = useState(false)\r\n  const [selectedOption, setSelectedOption] = useState(options[0])\r\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\r\n\r\n  const toggling = () => setIsOpen(!isOpen)\r\n\r\n  const onOptionClicked = (option: OptionProps) => () => {\r\n    setSelectedOption(option)\r\n    setIsOpen(false)\r\n\r\n    if (onChange) {\r\n      onChange(option)\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    setContainerSize({\r\n      width: dropdownRef.current.offsetWidth, // Consider border\r\n      height: dropdownRef.current.offsetHeight,\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\r\n      {containerSize.width !== 0 && (\r\n        <DropDownHeader onClick={toggling}>\r\n          <Text>{selectedOption.label}</Text>\r\n        </DropDownHeader>\r\n      )}\r\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\r\n      <DropDownListContainer>\r\n        <DropDownList ref={dropdownRef}>\r\n          {options.map((option) =>\r\n            option.label !== selectedOption.label ? (\r\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\r\n                <Text>{option.label}</Text>\r\n              </ListItem>\r\n            ) : null,\r\n          )}\r\n        </DropDownList>\r\n      </DropDownListContainer>\r\n    </DropDownContainer>\r\n  )\r\n}\r\n\r\nexport default Select\r\n"],"sourceRoot":""}